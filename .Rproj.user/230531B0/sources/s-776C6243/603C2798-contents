##### Load Packages ####
library(qualtRics)
library(tidyverse)
library(reshape2)
library(RColorBrewer)
library(rnaturalearth)
library(sf)
library(ggmap)
library(cowplot)


rm(list=ls()) #clear and close everything open

#### Import Survey Data ####

#set up qualtrics API
#qualtrics_api_credentials(api_key = "XNImZqJh7u1XerPh6vGkomdMdo1N36zXLsYDL3EN", 
#                          base_url = "uarizona.iad1.qualtrics.com",
#                          install = TRUE)

#view all surveys in qualtrics
#all_surveys() 

#fetch survey from qualtrics API
raw_qualtrics <- fetch_survey(surveyID = "SV_0uCJH5o52aEWTfE", force_request = TRUE)

#### Change town name from ITT to Namwala

namwala_hhid <- list(1452, 1454, 1456, 1457, 1458, 1459, 1461, 1463, 1467, 1469, 1472, 1475, 1476, 1478, 1480, 1485, 1486, 1487, 1489, 1495, 1496, 1497, 1503,
1504, 1505, 1508, 1513, 1514, 1518, 1521, 1522, 1523, 1525, 1527, 1528, 1532, 1533, 1534, 1535, 1538, 1539, 1540, 1542, 1543, 1544, 1546,
1555, 1556, 1558, 1560, 1625, 1632, 1676, 1679, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1693, 1451, 1453, 1455, 1460, 1462, 1464, 1465,
1466, 1468, 1470, 1471, 1473, 1474, 1477, 1479, 1481, 1482, 1483, 1484, 1488, 1494, 1498, 1499, 1500, 1501, 1502, 1506, 1507, 1509, 1510,
1511, 1512, 1515, 1516, 1517, 1519, 1520, 1524, 1526, 1529, 1530, 1531, 1536, 1537, 1541, 1545, 1557, 1559, 1619, 1620, 1621, 1622, 1623,
1624, 1673, 1674, 1675, 1677, 1678, 1680, 1681, 1682, 1683, 1690, 1691, 1694)

raw_qualtrics$town_correct <- as.numeric(raw_qualtrics$Q1.3 %in% namwala_hhid)

raw_qualtrics$Q1.5[raw_qualtrics$town_correct == 1] <- "Namwala"


#### Plot number of surveys by town ####

#select question with town
town_info <- dplyr::select(raw_qualtrics, "Q1.5")

#calculate count by town
town_info <- town_info %>%
  group_by(Q1.5) %>%
  tally()

#remove NA values, keep those that are complete (No, NA's)
town_info <- town_info[complete.cases(town_info), ]

count <- as.numeric(sum(town_info$n))

town_info$Q1.5 <- factor(town_info$Q1.5, levels = c("Pemba", "Mbabala", "Mpongwe", "Batoka", "Petauke", "Namwala",
                                                    "Nyimba", "Maamba", "Chongwe", "Itezhi-Tezhi", "Mkushi", 
                                                    "Mazabuka", "Kapiri Mposhi", "Choma"))


#Plot
town_plot <- ggplot(town_info, aes(x = Q1.5, y =n, label = n)) +
  geom_bar(stat = "identity", fill = 'steelblue') +
  theme_bw() +
  labs(x = "", y = "# Completed Surveys", title = paste("Total Surveys Completed =", count)) +
  theme(axis.text.x = element_text(angle=45, hjust=1),
        text = element_text(size=15)) +
  geom_text(size = 5, position = position_dodge(width = 1), vjust = -0.5, color = "steelblue") +
  scale_y_continuous(limits = c(0,160), breaks = seq(0, 160, by = 20))
town_plot


#surveys by day
surveys_day <- dplyr::select(raw_qualtrics, "RecordedDate", "Q1.4")
surveys_day$RecordedDate <- as.Date(surveys_day$RecordedDate, format = "%Y%m%d")

surveys_day <- surveys_day %>%
  group_by(RecordedDate, Q1.4) %>%
  tally()

ggplot(surveys_day, aes(x = RecordedDate, y = n, fill = Q1.4)) +
  geom_bar(stat = "identity") +
  theme_bw() + 
  scale_fill_brewer(palette = "Pastel1") +
  labs(x = "DATE", y= "COUNT", fill = "Enumerator", title = paste("Total Surveys Completed =", count))


#### PLACE TIES 1 - Plot locations of food sourcing by location (this UA, another UA, RA) ####

#pull out all place ties / food transfers questions
raw_info <- dplyr::select(raw_qualtrics, "Q1.3", "Q11.1#1_1":"Q11.1#5_8")

# THIS URBAN AREA
this_ua_sourcing <- dplyr::select(raw_qualtrics, "Q11.1#1_1":"Q11.1#1_8")
colnames(this_ua_sourcing) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
this_ua_sourcing_long <- melt(this_ua_sourcing, id.vars = NULL)

#remove NA values
this_ua_sourcing_long <- this_ua_sourcing_long[complete.cases(this_ua_sourcing_long), ]

#remove rows where they don't get food from this source
this_ua_sourcing_long <- this_ua_sourcing_long[this_ua_sourcing_long$value!= "I do not get any of this food type from this source", ]

#calculate the number in each group
this_ua_sourcing_plotdata <- this_ua_sourcing_long %>%
  group_by(variable, value) %>%
  tally()

#plot!
this_ua_sourcing_plot <- ggplot(this_ua_sourcing_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "This Urban Area")

this_ua_sourcing_plot

# ANOTHER URBAN AREA
another_ua_sourcing <- dplyr::select(raw_qualtrics, "Q11.2#1_1":"Q11.2#1_8")
colnames(another_ua_sourcing) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
another_ua_sourcing_long <- melt(another_ua_sourcing, id.vars = NULL)

#remove NA values
another_ua_sourcing_long <- another_ua_sourcing_long[complete.cases(another_ua_sourcing_long), ]

#remove rows where they don't get food from this source
another_ua_sourcing_long <- another_ua_sourcing_long[another_ua_sourcing_long$value!= "I do not get any of this food type from this source", ]

another_ua_sourcing_plotdata <- another_ua_sourcing_long %>%
  group_by(variable, value) %>%
  tally()

another_ua_sourcing_plot <- ggplot(another_ua_sourcing_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Another Urban Area")

another_ua_sourcing_plot

# RURAL AREA
rural_sourcing <- dplyr::select(raw_qualtrics, "Q11.3#1_1":"Q11.3#1_8")
colnames(rural_sourcing) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
rural_sourcing_long <- melt(rural_sourcing, id.vars = NULL)

#remove NA values
rural_sourcing_long <- rural_sourcing_long[complete.cases(rural_sourcing_long), ]

#remove rows where they don't get food from this source
rural_sourcing_long <- rural_sourcing_long[rural_sourcing_long$value!= "I do not get any of this food type from this source", ]

rural_sourcing_plotdata <- rural_sourcing_long %>%
  group_by(variable, value) %>%
  tally()

rural_sourcing_plot <- ggplot(rural_sourcing_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Rural Area")

rural_sourcing_plot


# ARRANGE THREE PLOTS TOGETHER
this_ua_sourcing_plotdata$location <- "this_ua"
another_ua_sourcing_plotdata$location <- "another_ua"
rural_sourcing_plotdata$location <- "rural"

merged_sourcing_data <- rbind(this_ua_sourcing_plotdata, another_ua_sourcing_plotdata, rural_sourcing_plotdata)

merged_sourcing_data$location = factor(merged_sourcing_data$location, levels=c('this_ua','another_ua','rural'))

#order factors for plotting. Make the I don't get this food type from this source at the top. 
merged_sourcing_data$value <- relevel(factor(merged_sourcing_data$value), "I do not get any of this food type from this source")


#make labels for different tables
table_label <- c(
  `this_ua` = "This urban area",
  `another_ua` = "Another urban area",
  `rural` = "Rural area")

sourcing_plot <- ggplot(merged_sourcing_data, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_manual(values = c("I do not get any of this food type from this source" = "grey")) +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Where do you purchase or receive these food types from?") +
  facet_wrap(~location, labeller = as_labeller(table_label)) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
sourcing_plot

#### PLACE TIES 2 - Plot how often they get food by location (this UA, another UA, RA) ####

# THIS URBAN AREA
this_ua_often <- dplyr::select(raw_qualtrics, "Q11.1#2_1":"Q11.1#2_8")
colnames(this_ua_often) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
this_ua_often_long <- melt(this_ua_often, id.vars = NULL)

#remove NA values
this_ua_often_long <- this_ua_often_long[complete.cases(this_ua_often_long), ]

this_ua_often_long$value <- factor(this_ua_often_long$value, levels = c("Daily", "Weekly", "Monthly", "Every 6 months", "Annually"))

this_ua_often_long_plotdata <- this_ua_often_long %>%
  group_by(variable, value) %>%
  tally()

this_ua_often_plot <- ggplot(this_ua_often_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "This Urban Area")

this_ua_often_plot



# ANOTHER URBAN AREA
another_ua_often <- dplyr::select(raw_qualtrics, "Q11.2#2_1":"Q11.2#2_8")
colnames(another_ua_often) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
another_ua_often_long <- melt(another_ua_often, id.vars = NULL)

#remove NA values
another_ua_often_long <- another_ua_often_long[complete.cases(another_ua_often_long), ]

another_ua_often_long$value <- factor(another_ua_often_long$value, levels = c("Daily", "Weekly", "Monthly", "Every 6 months", "Annually"))


another_ua_often_long_plotdata <- another_ua_often_long %>%
  group_by(variable, value) %>%
  tally()

another_ua_often_plot <- ggplot(another_ua_often_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Another Urban Area")

another_ua_often_plot


# RURAL  AREA
rural_often <- dplyr::select(raw_qualtrics, "Q11.3#2_1":"Q11.3#2_8")
colnames(rural_often) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
rural_often_long <- melt(rural_often, id.vars = NULL)

#remove NA values
rural_often_long <- rural_often_long[complete.cases(rural_often_long), ]

rural_often_long$value <- factor(rural_often_long$value, levels = c("Daily", "Weekly", "Monthly", "Every 6 months", "Annually"))


rural_often_long_plotdata <- rural_often_long %>%
  group_by(variable, value) %>%
  tally()

rural_often_long_plot <- ggplot(rural_often_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Rural Area")

rural_often_long_plot


# ARRANGE THREE PLOTS TOGETHER
this_ua_often_long_plotdata$location <- "this_ua"
another_ua_often_long_plotdata$location <- "another_ua"
rural_often_long_plotdata$location <- "rural"

merged_often_data <- rbind(this_ua_often_long_plotdata, another_ua_often_long_plotdata, rural_often_long_plotdata)

merged_often_data$location = factor(merged_often_data$location, levels=c('this_ua','another_ua','rural'))

how_often_plot <- ggplot(merged_often_data, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "How often do you get food from this source?") +
  facet_wrap(~location, labeller = as_labeller(table_label)) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
how_often_plot


#### PLACE TIES 3 - Plots for whether they would be able to get it elsewhere (this UA, another UA, RA) ####

# THIS URBAN AREA
this_ua_elsewhere <- dplyr::select(raw_qualtrics, "Q11.1#4_1":"Q11.1#4_8")
colnames(this_ua_elsewhere) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
this_ua_elsewhere_long <- melt(this_ua_elsewhere, id.vars = NULL)

#remove NA values
this_ua_elsewhere_long <- this_ua_elsewhere_long[complete.cases(this_ua_elsewhere_long), ]

this_ua_elsewhere_long$value <- factor(this_ua_elsewhere_long$value, levels = c("Yes", "No"))

this_ua_elsewhere_long_plotdata <- this_ua_elsewhere_long %>%
  group_by(variable, value) %>%
  tally()

this_ua_elsewhere_plot <- ggplot(this_ua_elsewhere_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "This Urban Area")

this_ua_elsewhere_plot


# ANOTHER URBAN AREA
another_ua_elsewhere <- dplyr::select(raw_qualtrics, "Q11.2#4_1":"Q11.2#4_8")
colnames(another_ua_elsewhere) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
another_ua_elsewhere_long <- melt(another_ua_elsewhere, id.vars = NULL)

#remove NA values
another_ua_elsewhere_long <- another_ua_elsewhere_long[complete.cases(another_ua_elsewhere_long), ]

another_ua_elsewhere_long$value <- factor(another_ua_elsewhere_long$value, levels = c("Yes", "No"))

another_ua_elsewhere_long_plotdata <- another_ua_elsewhere_long %>%
  group_by(variable, value) %>%
  tally()

another_ua_elsewhere_plot <- ggplot(another_ua_elsewhere_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Another Urban Area")

another_ua_elsewhere_plot


# RURAL AREA
rural_elsewhere <- dplyr::select(raw_qualtrics, "Q11.3#4_1":"Q11.3#4_8")
colnames(rural_elsewhere) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
rural_elsewhere_long <- melt(rural_elsewhere, id.vars = NULL)

#remove NA values
rural_elsewhere_long <- rural_elsewhere_long[complete.cases(rural_elsewhere_long), ]

rural_elsewhere_long$value <- factor(rural_elsewhere_long$value, levels = c("Yes", "No"))

rural_elsewhere_long_plotdata <- rural_elsewhere_long %>%
  group_by(variable, value) %>%
  tally()

rural_elsewhere_plot <- ggplot(rural_elsewhere_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Rural Area")

rural_elsewhere_plot



# ARRANGE THREE PLOTS TOGETHER
this_ua_elsewhere_long_plotdata$location <- "this_ua"
another_ua_elsewhere_long_plotdata$location <- "another_ua"
rural_elsewhere_long_plotdata$location <- "rural"

merged_elsewhere_data <- rbind(this_ua_elsewhere_long_plotdata, another_ua_elsewhere_long_plotdata, rural_elsewhere_long_plotdata)

merged_elsewhere_data$location = factor(merged_elsewhere_data$location, levels=c('this_ua','another_ua','rural'))

elsewhere_plot <- ggplot(merged_elsewhere_data, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "If you didn't have access to this food, could you get it elsewhere?") +
  facet_wrap(~location, labeller = as_labeller(table_label)) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
elsewhere_plot




#### PLACE TIES 4 - Plots for how much of food budget this makes up ####

# THIS URBAN AREA
this_ua_budget <- dplyr::select(raw_qualtrics, "Q11.1#3_1":"Q11.1#3_8")
colnames(this_ua_budget) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
this_ua_budget_long <- melt(this_ua_budget, id.vars = NULL)

#remove NA values
this_ua_budget_long <- this_ua_budget_long[complete.cases(this_ua_budget_long), ]

this_ua_budget_long$value <- factor(this_ua_budget_long$value, levels = c("None", "Little", "Some", "Most", "All"))

this_ua_budget_long_plotdata <- this_ua_budget_long %>%
  group_by(variable, value) %>%
  tally()

this_ua_budget_long_plot <- ggplot(this_ua_budget_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "This Urban Area")

this_ua_budget_long_plot


# ANOTHER URBAN AREA
another_ua_budget <- dplyr::select(raw_qualtrics, "Q11.2#3_1":"Q11.2#3_8")
colnames(another_ua_budget) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
another_ua_budget_long <- melt(another_ua_budget, id.vars = NULL)

#remove NA values
another_ua_budget_long <- another_ua_budget_long[complete.cases(another_ua_budget_long), ]

another_ua_budget_long$value <- factor(another_ua_budget_long$value, levels = c("None", "Little", "Some", "Most", "All"))

another_ua_budget_long_plotdata <- another_ua_budget_long %>%
  group_by(variable, value) %>%
  tally()

another_ua_budget_plot <- ggplot(another_ua_budget_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Another Urban Area")

another_ua_budget_plot


# RURAL AREA
rural_budget <- dplyr::select(raw_qualtrics, "Q11.3#3_1":"Q11.3#3_8")
colnames(rural_budget) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
rural_budget_long <- melt(rural_budget, id.vars = NULL)

#remove NA values
rural_budget_long <- rural_budget_long[complete.cases(rural_budget_long), ]

rural_budget_long$value <- factor(rural_budget_long$value, levels = c("None", "Little", "Some", "Most", "All"))

rural_budget_long_plotdata <- rural_budget_long %>%
  group_by(variable, value) %>%
  tally()

rural_budget_long_plot <- ggplot(rural_budget_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Rural Area")

rural_budget_long_plot


# ARRANGE THREE PLOTS TOGETHER
this_ua_budget_long_plotdata$location <- "this_ua"
another_ua_budget_long_plotdata$location <- "another_ua"
rural_budget_long_plotdata$location <- "rural"

merged_budget_data <- rbind(this_ua_budget_long_plotdata, another_ua_budget_long_plotdata, rural_budget_long_plotdata)

merged_budget_data$location = factor(merged_budget_data$location, levels=c('this_ua','another_ua','rural'))

budget_plot <- ggplot(merged_budget_data, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "How much of this food type do you get from this source?") +
  facet_wrap(~location, labeller = as_labeller(table_label)) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
budget_plot


#### PLACE TIES 5 - Plots for reason get food from this source ####

# THIS URBAN AREA
this_ua_reason <- dplyr::select(raw_qualtrics, "Q11.1#5_1":"Q11.1#5_8")
colnames(this_ua_reason) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
this_ua_reason_long <- melt(this_ua_reason, id.vars = NULL)

#remove NA values
this_ua_reason_long <- this_ua_reason_long[complete.cases(this_ua_reason_long), ]

this_ua_reason_long_plotdata <- this_ua_reason_long %>%
  group_by(variable, value) %>%
  tally()

this_ua_reason_long_plot <- ggplot(this_ua_reason_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "This Urban Area")

this_ua_reason_long_plot

# ANOTHER URBAN AREA
another_ua_reason <- dplyr::select(raw_qualtrics, "Q11.2#5_1":"Q11.2#5_8")
colnames(another_ua_reason) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
another_ua_reason_long <- melt(another_ua_reason, id.vars = NULL)

#remove NA values
another_ua_reason_long <- another_ua_reason_long[complete.cases(another_ua_reason_long), ]

another_ua_reason_long_plotdata <- another_ua_reason_long %>%
  group_by(variable, value) %>%
  tally()

another_ua_reason_long_plot <- ggplot(another_ua_reason_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Another Urban Area")

another_ua_reason_long_plot

# RURAL AREA
rural_reason <- dplyr::select(raw_qualtrics, "Q11.3#5_1":"Q11.3#5_8")
colnames(rural_reason) <- c("cereals", "pulses", "vegetables", "fruit", "meatfish", "milk", "sugaroil", "processed")

#melt to make long format by category
rural_reason_long <- melt(rural_reason, id.vars = NULL)

#remove NA values
rural_reason_long <- rural_reason_long[complete.cases(rural_reason_long), ]

rural_reason_long_plotdata <- rural_reason_long %>%
  group_by(variable, value) %>%
  tally()

rural_reason_long_plot <- ggplot(rural_reason_long_plotdata, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Rural Area")

rural_reason_long_plot


# ARRANGE THREE PLOTS TOGETHER
this_ua_reason_long_plotdata$location <- "this_ua"
another_ua_reason_long_plotdata$location <- "another_ua"
rural_reason_long_plotdata$location <- "rural"

merged_reason_data <- rbind(this_ua_reason_long_plotdata, another_ua_reason_long_plotdata, rural_reason_long_plotdata)

merged_reason_data$location = factor(merged_reason_data$location, levels=c('this_ua','another_ua','rural'))

reason_plot <- ggplot(merged_reason_data, aes(x = variable, y = n, fill = value)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "FOOD TYPE", y = "COUNT", fill = "", title = "Why do you get food from this source?") +
  facet_wrap(~location, labeller = as_labeller(table_label)) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))

reason_plot




#### MERGE ALL PLOTS TOGETHER ####
library(ggpubr)
ggarrange(sourcing_plot, how_often_plot, budget_plot, elsewhere_plot, reason_plot, nrow = 5, ncol = 1)


#### CLEANING PLACE TIES DATASET FROM QUALTRICS ####

# goal here is to create a clean dataset with 1 row for each row in the place ties question tables.
# Duplicate rows for this ua / another ua / rural area

#step 1 - Collect all the information

#just for table 1 q1
raw_place_ties_t1 <- dplyr::select(raw_qualtrics, "Q1.3", "Q1.5", "Q11.1#1_1":"Q11.1#5_8")

#q1
colnames(raw_place_ties_t1)[colnames(raw_place_ties_t1) %in% 
                              c("Q11.1#1_1", "Q11.1#1_2", "Q11.1#1_3", "Q11.1#1_4", "Q11.1#1_5", "Q11.1#1_6", "Q11.1#1_7", "Q11.1#1_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t1_long <- raw_place_ties_t1 %>%
  gather(food_type, source_location, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#q2
colnames(raw_place_ties_t1_long)[colnames(raw_place_ties_t1_long) %in% 
                              c("Q11.1#2_1", "Q11.1#2_2", "Q11.1#2_3", "Q11.1#2_4", "Q11.1#2_5", "Q11.1#2_6", "Q11.1#2_7", "Q11.1#2_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t1_long <- raw_place_ties_t1_long %>%
  gather(food_type_2, how_often, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#q3
colnames(raw_place_ties_t1_long)[colnames(raw_place_ties_t1_long) %in% 
                                   c("Q11.1#3_1", "Q11.1#3_2", "Q11.1#3_3", "Q11.1#3_4", "Q11.1#3_5", "Q11.1#3_6", "Q11.1#3_7", "Q11.1#3_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t1_long <- raw_place_ties_t1_long %>%
  gather(food_type_3, food_budget, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#Q4
colnames(raw_place_ties_t1_long)[colnames(raw_place_ties_t1_long) %in% 
                                   c("Q11.1#4_1", "Q11.1#4_2", "Q11.1#4_3", "Q11.1#4_4", "Q11.1#4_5", "Q11.1#4_6", "Q11.1#4_7", "Q11.1#4_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t1_long <- raw_place_ties_t1_long %>%
  gather(food_type_4, replace_supply, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#Q5
colnames(raw_place_ties_t1_long)[colnames(raw_place_ties_t1_long) %in% 
                                   c("Q11.1#5_1", "Q11.1#5_2", "Q11.1#5_3", "Q11.1#5_4", "Q11.1#5_5", "Q11.1#5_6", "Q11.1#5_7", "Q11.1#5_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t1_long <- raw_place_ties_t1_long %>%
  gather(food_type_5, reason, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")



raw_place_ties_t1_long <- filter(raw_place_ties_t1_long, (food_type==food_type_2 & 
                                                            food_type_2==food_type_3 &
                                                            food_type_3==food_type_4 &
                                                            food_type_4==food_type_5))

#remove columns no longer needed
raw_place_ties_t1_long <- raw_place_ties_t1_long %>% select(-c("food_type_2", "food_type_3", "food_type_4", "food_type_5"))

#add column to highlight table 1 - this urban area
raw_place_ties_t1_long$table_type <- "this_ua"






#table 2
raw_place_ties_t2 <- dplyr::select(raw_qualtrics, "Q1.3", "Q1.5", "Q11.2#1_1":"Q11.2#9_8_1")

#Q1
colnames(raw_place_ties_t2)[colnames(raw_place_ties_t2) %in% 
                              c("Q11.2#1_1", "Q11.2#1_2", "Q11.2#1_3", "Q11.2#1_4", "Q11.2#1_5", "Q11.2#1_6", "Q11.2#1_7", "Q11.2#1_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2 %>%
  gather(food_type, source_location, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#Q2
colnames(raw_place_ties_t2_long)[colnames(raw_place_ties_t2_long) %in% 
                              c("Q11.2#2_1", "Q11.2#2_2", "Q11.2#2_3", "Q11.2#2_4", "Q11.2#2_5", "Q11.2#2_6", "Q11.2#2_7", "Q11.2#2_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2_long %>%
  gather(food_type_2, how_often, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t2_long <- filter(raw_place_ties_t2_long, (food_type==food_type_2))
                                                            

#Q3
colnames(raw_place_ties_t2_long)[colnames(raw_place_ties_t2_long) %in% 
                                   c("Q11.2#3_1", "Q11.2#3_2", "Q11.2#3_3", "Q11.2#3_4", "Q11.2#3_5", "Q11.2#3_6", "Q11.2#3_7", "Q11.2#3_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2_long %>%
  gather(food_type_3, food_budget, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t2_long <- filter(raw_place_ties_t2_long, (food_type==food_type_3))


#Q4
colnames(raw_place_ties_t2_long)[colnames(raw_place_ties_t2_long) %in% 
                                   c("Q11.2#4_1", "Q11.2#4_2", "Q11.2#4_3", "Q11.2#4_4", "Q11.2#4_5", "Q11.2#4_6", "Q11.2#4_7", "Q11.2#4_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2_long %>%
  gather(food_type_4, replace_supply, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

#remove spare rows
raw_place_ties_t2_long <- filter(raw_place_ties_t2_long, (food_type==food_type_4))



#Q5
colnames(raw_place_ties_t2_long)[colnames(raw_place_ties_t2_long) %in% 
                                   c("Q11.2#5_1", "Q11.2#5_2", "Q11.2#5_3", "Q11.2#5_4", "Q11.2#5_5", "Q11.2#5_6", "Q11.2#5_7", "Q11.2#5_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2_long %>%
  gather(food_type_5, reason, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t2_long <- filter(raw_place_ties_t2_long, (food_type==food_type_5))


#Q6
colnames(raw_place_ties_t2_long)[colnames(raw_place_ties_t2_long) %in% 
                                   c("Q11.2#6_1_1", "Q11.2#6_2_1", "Q11.2#6_3_1", "Q11.2#6_4_1", "Q11.2#6_5_1", "Q11.2#6_6_1", "Q11.2#6_7_1", "Q11.2#6_8_1")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2_long %>%
  gather(food_type_6, town, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t2_long <- filter(raw_place_ties_t2_long, (food_type==food_type_6))


#Q7
colnames(raw_place_ties_t2_long)[colnames(raw_place_ties_t2_long) %in% 
                                   c("Q11.2#7_1", "Q11.2#7_2", "Q11.2#7_3", "Q11.2#7_4", "Q11.2#7_5", "Q11.2#7_6", "Q11.2#7_7", "Q11.2#7_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2_long %>%
  gather(food_type_7, district, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t2_long <- filter(raw_place_ties_t2_long, (food_type==food_type_7))


#Q8
colnames(raw_place_ties_t2_long)[colnames(raw_place_ties_t2_long) %in% 
                                   c("Q11.2#8_1", "Q11.2#8_2", "Q11.2#8_3", "Q11.2#8_4", "Q11.2#8_5", "Q11.2#8_6", "Q11.2#8_7", "Q11.2#8_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2_long %>%
  gather(food_type_8, transport_mode, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

#remove spare rows
raw_place_ties_t2_long <- filter(raw_place_ties_t2_long, (food_type==food_type_8))


#Q9
colnames(raw_place_ties_t2_long)[colnames(raw_place_ties_t2_long) %in% 
                                   c("Q11.2#9_1_1", "Q11.2#9_2_1", "Q11.2#9_3_1", "Q11.2#9_4_1", "Q11.2#9_5_1", "Q11.2#9_6_1", "Q11.2#9_7_1", "Q11.2#9_8_1")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t2_long <- raw_place_ties_t2_long %>%
  gather(food_type_9, minutes, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

#remove spare rows
raw_place_ties_t2_long <- filter(raw_place_ties_t2_long, (food_type==food_type_9))



#remove columns no longer needed
raw_place_ties_t2_long <- raw_place_ties_t2_long %>% select(-c("food_type_2", "food_type_3", "food_type_4", "food_type_5", "food_type_6",
                                                               "food_type_7", "food_type_8", "food_type_9"))

#add column to highlight table 1 - this urban area
raw_place_ties_t2_long$table_type <- "another_ua"




#### TABLE 3
raw_place_ties_t3 <- dplyr::select(raw_qualtrics, "Q1.3", "Q1.5", "Q11.3#1_1":"Q11.3#8_8_1")


#Q1
colnames(raw_place_ties_t3)[colnames(raw_place_ties_t3) %in% 
                              c("Q11.3#1_1", "Q11.3#1_2", "Q11.3#1_3", "Q11.3#1_4", "Q11.3#1_5", "Q11.3#1_6", "Q11.3#1_7", "Q11.3#1_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t3_long <- raw_place_ties_t3 %>%
  gather(food_type, source_location, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")



#Q2
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in% 
                                   c("Q11.3#2_1", "Q11.3#2_2", "Q11.3#2_3", "Q11.3#2_4", "Q11.3#2_5", "Q11.3#2_6", "Q11.3#2_7", "Q11.3#2_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
  gather(food_type_2, how_often, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_2))


#Q3
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in% 
                                   c("Q11.3#3_1", "Q11.3#3_2", "Q11.3#3_3", "Q11.3#3_4", "Q11.3#3_5", "Q11.3#3_6", "Q11.3#3_7", "Q11.3#3_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
  gather(food_type_3, food_budget, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_3))



#Q4
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in% 
                                   c("Q11.3#4_1", "Q11.3#4_2", "Q11.3#4_3", "Q11.3#4_4", "Q11.3#4_5", "Q11.3#4_6", "Q11.3#4_7", "Q11.3#4_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
  gather(food_type_4, replace_supply, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_4))



#Q5
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in% 
                                   c("Q11.3#5_1", "Q11.3#5_2", "Q11.3#5_3", "Q11.3#5_4", "Q11.3#5_5", "Q11.3#5_6", "Q11.3#5_7", "Q11.3#5_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
  gather(food_type_5, reason, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_5))



#Q6
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in% 
                                   c("Q11.3#6_1", "Q11.3#6_2", "Q11.3#6_3", "Q11.3#6_4", "Q11.3#6_5", "Q11.3#6_6", "Q11.3#6_7", "Q11.3#6_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
  gather(food_type_6, district, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_6))



#Q7
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in% 
                                   c("Q11.3#7_1", "Q11.3#7_2", "Q11.3#7_3", "Q11.3#7_4", "Q11.3#7_5", "Q11.3#7_6", "Q11.3#7_7", "Q11.3#7_8")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
  gather(food_type_7, transport_mode, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_7))



#Q8
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in% 
                                   c("Q11.3#8_1_1", "Q11.3#8_2_1", "Q11.3#8_3_1", "Q11.3#8_4_1", "Q11.3#8_5_1", "Q11.3#8_6_1", "Q11.3#8_7_1", "Q11.3#8_8_1")] <- 
  c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")

raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
  gather(food_type_8, minutes, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")


#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_8))


#remove columns no longer needed
raw_place_ties_t3_long <- raw_place_ties_t3_long %>% select(-c("food_type_2", "food_type_3", "food_type_4", "food_type_5", "food_type_6",
                                                               "food_type_7", "food_type_8"))

#add column to highlight table 1 - this urban area
raw_place_ties_t3_long$table_type <- "rural"

raw_place_ties_t2_long$minutes <- as.character(raw_place_ties_t2_long$minutes)
raw_place_ties_t3_long$minutes <- as.character(raw_place_ties_t3_long$minutes)

#### Merge All Three Tables Together
complete_dataset <- bind_rows(raw_place_ties_t1_long, raw_place_ties_t2_long, raw_place_ties_t3_long)
complete_dataset <- complete_dataset[!is.na(complete_dataset$Q1.3),]
complete_dataset <- complete_dataset[!is.na(complete_dataset$source_location),]

write.csv(complete_dataset, "/Users/azimmer/Desktop/foodtransfers_place_ties_test.csv")

#plot by town
test <- complete_dataset[complete_dataset$source_location!= "I do not get any of this food type from this source", ]

test <- test %>%
  group_by(Q1.5, table_type) %>%
  summarise(n = n()) %>%
  mutate(freq = n/ sum(n)*100)
  
test <- test[complete.cases(test), ]

test$Q1.5 <- factor(test$Q1.5, levels = c("Pemba", "Mbabala", "Mpongwe", "Batoka", "Petauke", "Namwala", "Nyimba",
                                               "Maamba", "Chongwe", "Itezhi-Tezhi", "Mkushi", "Mazabuka", "Kapiri Mposhi",
                                               "Choma"))

test$table_type <- factor(test$table_type, levels = c("this_ua", "another_ua", "rural"))


ggplot(test, aes(x = Q1.5, y = freq, fill = table_type)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  labs(x = "TOWN", y = "PERCENTAGE (%)", fill = "FOOD SOURCE") +
  theme(axis.text.x = element_text(angle=45, hjust=1),
        text = element_text(size=15)) 



#replicate plot 1
test <- complete_dataset %>%
  group_by(Q1.5, table_type, food_type, source_location) %>%
  tally()

ggplot(test, aes(x = food_type, y = n, fill = source_location)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  scale_fill_brewer(palette = "Set3") +
  labs(x = "FOOD", y = "COUNT", fill = "SOURCE") +
  theme(legend.position = "bottom") +
  facet_wrap(~table_type) 
  



#### REDUCED COPING STRATEGY INDEX SCORE #####

rcsi_raw <- select(raw_qualtrics, "Q1.3", "Q1.5", "Q9.2_1_1":"Q9.2_5_1")

#severity weight for q2 = 2
rcsi_raw$Q9.2_2_1 <- (rcsi_raw$Q9.2_2_1 * 2)

#severity weight for q4 = 3
rcsi_raw$Q9.2_2_1 <- (rcsi_raw$Q9.2_4_1 * 3)

#change columns to numeric
rcsi_raw <- as.numeric(as.character(rcsi_raw))
rcsi_raw$Q9.2_2_1 <- as.numeric(rcsi_raw$Q9.2_2_1)
rcsi_raw$Q9.2_3_1 <- as.numeric(rcsi_raw$Q9.2_3_1)
rcsi_raw$Q9.2_4_1 <- as.numeric(rcsi_raw$Q9.2_4_1)
rcsi_raw$Q9.2_5_1 <- as.numeric(rcsi_raw$Q9.2_5_1)

#calculate rcsi score
rcsi_raw <- rcsi_raw %>%
  replace(is.na(.), 0) %>%
  mutate(rcsi_score = rowSums(.[3:7]))

#drop other columns
rcsi_raw <- select(rcsi_raw, Q1.3, Q1.5, rcsi_score)

#add categories
rcsi_raw$rcsi_category = cut(rcsi_raw$rcsi_score,c(-1,3,18,56))
levels(rcsi_raw$rcsi_category) = c("Low","Medium","High")


#### HH INCOME ####

hhincome_raw <- select(raw_qualtrics, "Q1.3", "Q1.5", "Q5.13", "Q5.15":"Q5.20")

hhincome_raw <- hhincome_raw %>%
  replace(is.na(.), 0) %>%
  mutate(other_income = (rowSums(.[4:9])/12))

#drop other columns
hhincome_raw <- select(hhincome_raw, Q1.3, Q1.5, Q5.13, other_income)

hhincome_raw <- hhincome_raw %>%
  replace(is.na(.), 0) %>%
  mutate(total_income = (rowSums(.[3:4])))

#drop other columns
hhincome_raw <- select(hhincome_raw, Q1.3, Q1.5, total_income)

##### HH EXPENDITURE ####

hhexpenditure_raw <- select(raw_qualtrics, "Q1.3", "Q1.5", "Q12.1", "Q12.2")
var_lab(hhexpenditure_raw) <- NULL
colnames(hhexpenditure_raw) <- c("Q1.3", "Q1.5", "food_expenditure", "other_expenditure")

hhexpenditure_raw$total_expenditure <- rowSums(hhexpenditure_raw[,c("food_expenditure", "other_expenditure")], na.rm=TRUE)                            
                   
#drop other columns
hhexpenditure_raw <- select(hhexpenditure_raw, Q1.3, Q1.5, food_expenditure, total_expenditure)

hhexpenditure_raw$food_expenditure <-  (hhexpenditure_raw$food_expenditure*4)                   
hhexpenditure_raw$total_expenditure <-  (hhexpenditure_raw$total_expenditure*4)                   

   
##### MERGING DATASETS TOGETHER ####

complete_dataset_othervars <- merge(complete_dataset, rcsi_raw, by = c("Q1.3", "Q1.5"))
complete_dataset_othervars <- merge(complete_dataset_othervars, hhincome_raw, by = c("Q1.3", "Q1.5"))
complete_dataset_othervars <- merge(complete_dataset_othervars, hhexpenditure_raw, by = c("Q1.3", "Q1.5"))

ggplot(complete_dataset_othervars, aes(x = total_income, y = total_expenditure, color = rcsi_score)) +
  geom_abline(intercept = 0, slope = 1, size = 0.5) +
  geom_point() +
  labs(x = "MONTHLY HH INCOME", y = "MONTHLY HH EXPENDITURE", color = "RCSI")


ggplot(complete_dataset_othervars, aes(x = total_income, y = rcsi_score, color = Q1.5)) +
  geom_point() +
  labs(x = "TOTAL HH INCOME", y = "RCSI SCORE", color = "TOWN") 


write.csv(complete_dataset_othervars, "/Users/azimmer/Desktop/foodtransfers_place_ties_test.csv")





##### CITY LEVEL DATA ####

#POP data from Landscan 2018
town <- c('Batoka', 'Choma', 'Chongwe', 'Itezhi-Tezhi', 'Kapiri Mposhi', 'Maamba', 'Mazabuka',
          'Mbabala', 'Mkushi', 'Mpongwe', 'Namwala', 'Nyimba', 'Pemba', 'Petauke')
population <- c(5341, 64085,	13998,	14426,	56193,	8712,	35055,	1076,	18486,	4882,	7839,	8118,	467,	7041)

town_populations <- data.frame(town, population)

population_plot <- town_populations %>%
  mutate(town = fct_reorder(town, population)) %>%
  ggplot(aes(x = town, y = population)) +
  geom_bar(stat = "identity", fill = '#004225') +
  theme_bw() +
  labs(x = "", y = "Population (2018)") +
  scale_y_continuous(labels = scales::comma) +
  theme(axis.text.x = element_blank(),
        axis.ticks = element_blank())
population_plot


ggarrange(population_plot, town_plot, nrow = 2, ncol = 1)










##### PLOT MAP OF URBAN LOCATIONS ####

# Read in useful mapping data

#town locations
town_gps <- read_csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/Town_GPS.csv")
town_gps_sf <- st_as_sf(town_gps, coords = c("Longitude", "Latitude"), crs = 4326)
lusaka_gps <- read_csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/Lusaka_GPS.csv")
lusaka_gps_sf <- st_as_sf(lusaka_gps, coords = c("Longitude", "Latitude"), crs = 4326)

#trunk roads data 
trunk_roads <- st_read("/Users/azimmer/Documents/PhD Geography/Research/Market Governance Paper/GIS Roads Data/Trunk_Roads.shp")

#rnatural earth data
spdf_africa <- ne_countries(continent = 'africa', returnclass = "sf", scale = 10)
spdf_zambia <- ne_countries(country = 'zambia', returnclass = "sf", scale = 10)

#for plotting
spdf_europe <- ne_countries(continent = 'europe', returnclass = "sf")
spdf_asia <- ne_countries(continent = 'asia', returnclass = "sf")

# GGMAP basemap
zambia_basemap <- get_googlemap("zambia", zoom = 8, maptype = "satellite") %>% ggmap()

# Map 1 - Zambia in Africa
africa_map <- ggplot() +
  geom_sf(data = spdf_africa, fill = 'grey93') +
  geom_sf(data = spdf_europe, fill = 'grey93') +
  geom_sf(data = spdf_asia, fill = 'grey93') +
  geom_sf(data = spdf_zambia, fill = '#004225') +
  labs(x = '', y = '') +
  theme_void() +
  ylim(c(-40,40)) + xlim(-20,60) +
  theme(panel.grid.major = element_line(color = gray(.3), linetype = "dashed", size = 0.2), panel.background = element_rect(fill = 'aliceblue')) +
  theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
africa_map

#basemap for zambia

zambia_basemap <- get_map(location=myLocation, source="stamen", zoom = 7)
ggmap(zambia_basemap)

# Map 2 - City Locations in Zambia
zambia_inset <- ggmap(zambia_basemap)+
  geom_point(data = town_gps, aes(x = Longitude, y = Latitude), color = "darkred", size = 4) +
  geom_label_repel(data = town_gps, aes(x=Longitude, y = Latitude, label = Town)) +
  theme_void()
zambia_inset


gg_inset_map1 = ggdraw() +
  draw_plot(zambia_inset) +
  draw_plot(africa_map, x = 0.01, y = 0.7, width = 0.3, height = 0.3)

gg_inset_map1

