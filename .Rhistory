phavg_lm <- lm(phavg ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phavg_lm_log <- lm(log(phavg) ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
stargazer(phavg_lm, phavg_lm_log)
phpc_lm_z_coef <- as.data.frame(summary(phpc_lm_z)$coefficients)
phpc_lm_z_coef <- tibble::rownames_to_column(phpc_lm_z_coef, "variable")
phpc_lm_z_coef$variable <- str_remove(phpc_lm_z_coef$variable, "market")
phpc_lm_z_coef <- dplyr::select(phpc_lm_z_coef, variable, Estimate)
colnames(phpc_lm_z_coef) <- c("market", "estimate")
phpc_lm_z_coef <- merge(phpc_lm_z_coef, ti_vars, by = "market")
phpc_lm_z_coef <- as.data.frame(phpc_lm_z_coef)
phpc_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phcv_lm_coef)
phpc_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phpc_lm_z_coef)
summary(phpc_lm_z_coef_test)
# Maize Price Analysis
# Andrew Zimmer
# March 2022
rm(list=ls()) #clear and close everything open
#### Packages ####
library(tidyverse)
library(stargazer)
library(ggpubr)
library(scales)
library(spdep)
#### SET-UP ####
dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset.csv")
#dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset_method2.csv")
dataset <- dataset[,-1]
#extract time-invariant variables
ti_vars <- dplyr::select(dataset, market, capital_distance_km, avg_neighbor_distance_km, esa_ag_percent,
log_pop_growth, pop_2015)
ti_vars <- ti_vars[!duplicated(ti_vars), ]
#make growing_season a factor
dataset$growing_season <- as.factor(dataset$growing_season)
missing_count_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/Missing Count Data/missing_count_data.csv")
missing_count_data <- missing_count_data[,-1]
dataset <- merge(dataset, missing_count_data, by = c("market", "country", "growing_season"))
#### Add in variables for backwardation
dataset <- dataset %>%                            # Add lagged column
group_by(market) %>%
arrange(growing_season) %>%
mutate(lead_precip = dplyr::lead(precip_anomaly, n = 1, default = NA)) %>%
mutate(lead_temp = dplyr::lead(temp_anomaly, n = 1, default = NA))
#add zscore
dataset <- dataset %>%
mutate(precip_anom_z = (precip_anomaly - mean(precip_anomaly))/sd(precip_anomaly)) %>%
mutate(temp_anom_z = (temp_anomaly - mean(temp_anomaly))/sd(temp_anomaly)) %>%
mutate(lead_precip_z = (lead_precip - mean(lead_precip, na.rm=TRUE))/sd(lead_precip, na.rm=TRUE)) %>%
mutate(lead_temp_z = (lead_temp - mean(lead_temp, na.rm=TRUE))/sd(lead_temp, na.rm=TRUE))
#add log variable for IV's
dataset <- dataset %>%
mutate(phavg_log = log(phavg))
phpc_lm <- lm(phpc ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
missing_count +
country +
growing_season +
market, data = dataset)
phcv_lm <- lm(phcv ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
missing_count +
country +
growing_season +
market, data = dataset)
phavg_lm <- lm(phavg ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
missing_count +
country +
growing_season +
market, data = dataset)
phpc_lm_z <- lm(phpc ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phpc_lm_z_coef <- as.data.frame(summary(phpc_lm_z)$coefficients)
phpc_lm_z_coef <- tibble::rownames_to_column(phpc_lm_z_coef, "variable")
phpc_lm_z_coef$variable <- str_remove(phpc_lm_z_coef$variable, "market")
phpc_lm_z_coef <- dplyr::select(phpc_lm_z_coef, variable, Estimate)
colnames(phpc_lm_z_coef) <- c("market", "estimate")
phpc_lm_z_coef <- merge(phpc_lm_z_coef, ti_vars, by = "market")
phpc_lm_z_coef <- as.data.frame(phpc_lm_z_coef)
phpc_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phpc_lm_z_coef)
summary(phpc_lm_z_coef_test)
phcv_lm_z <- lm(phcv ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phcv_lm_z_coef <- as.data.frame(summary(phcv_lm_z)$coefficients)
phcv_lm_z_coef <- tibble::rownames_to_column(phcv_lm_z_coef, "variable")
phcv_lm_z_coef$variable <- str_remove(phcv_lm_z_coef$variable, "market")
phcv_lm_z_coef <- dplyr::select(phcv_lm_z_coef, variable, Estimate)
colnames(phcv_lm_z_coef) <- c("market", "estimate")
phcv_lm_z_coef <- merge(phcv_lm_z_coef, ti_vars, by = "market")
phcv_lm_z_coef <- as.data.frame(phcv_lm_z_coef)
phcv_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phcv_lm_z_coef)
summary(phcv_lm_z_coef_test)
phavg_lm_z <- lm(phavg ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phavg_lm_z_coef <- as.data.frame(summary(phavg_lm_z)$coefficients)
phavg_lm_z_coef <- tibble::rownames_to_column(phavg_lm_z_coef, "variable")
phavg_lm_z_coef$variable <- str_remove(phavg_lm_z_coef$variable, "market")
phavg_lm_z_coef <- dplyr::select(phavg_lm_z_coef, variable, Estimate)
colnames(phavg_lm_z_coef) <- c("market", "estimate")
phavg_lm_z_coef <- merge(phavg_lm_z_coef, ti_vars, by = "market")
phavg_lm_z_coef <- as.data.frame(phavg_lm_z_coef)
phavg_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phavg_lm_z_coef)
summary(phavg_lm_z_coef_test)
stargazer(phpc_lm_z_coef_test, phcv_lm_z_coef_test, phavg_lm_z_coef_test)
phpc_lm_z <- lm(phpc ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
precip_anom_z * lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phpc_lm_z <- lm(phpc ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
precip_anom_z * lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phpc_lm_z_coef <- as.data.frame(summary(phpc_lm_z)$coefficients)
phpc_lm_z_coef <- tibble::rownames_to_column(phpc_lm_z_coef, "variable")
phpc_lm_z_coef$variable <- str_remove(phpc_lm_z_coef$variable, "market")
phpc_lm_z_coef <- dplyr::select(phpc_lm_z_coef, variable, Estimate)
colnames(phpc_lm_z_coef) <- c("market", "estimate")
phpc_lm_z_coef <- merge(phpc_lm_z_coef, ti_vars, by = "market")
phpc_lm_z_coef <- as.data.frame(phpc_lm_z_coef)
phpc_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phpc_lm_z_coef)
summary(phpc_lm_z_coef_test)
phcv_lm_z <- lm(phcv ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
precip_anom_z * lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phcv_lm_z_coef <- as.data.frame(summary(phcv_lm_z)$coefficients)
phcv_lm_z_coef <- tibble::rownames_to_column(phcv_lm_z_coef, "variable")
phcv_lm_z_coef$variable <- str_remove(phcv_lm_z_coef$variable, "market")
phcv_lm_z_coef <- dplyr::select(phcv_lm_z_coef, variable, Estimate)
colnames(phcv_lm_z_coef) <- c("market", "estimate")
phcv_lm_z_coef <- merge(phcv_lm_z_coef, ti_vars, by = "market")
phcv_lm_z_coef <- as.data.frame(phcv_lm_z_coef)
phcv_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phcv_lm_z_coef)
summary(phcv_lm_z_coef_test)
phavg_lm_z <- lm(phavg ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
missing_count +
precip_anom_z * lead_temp_z +
country +
growing_season +
market, data = dataset)
phavg_lm_z_coef <- as.data.frame(summary(phavg_lm_z)$coefficients)
phavg_lm_z_coef <- tibble::rownames_to_column(phavg_lm_z_coef, "variable")
phavg_lm_z_coef$variable <- str_remove(phavg_lm_z_coef$variable, "market")
phavg_lm_z_coef <- dplyr::select(phavg_lm_z_coef, variable, Estimate)
colnames(phavg_lm_z_coef) <- c("market", "estimate")
phavg_lm_z_coef <- merge(phavg_lm_z_coef, ti_vars, by = "market")
phavg_lm_z_coef <- as.data.frame(phavg_lm_z_coef)
phavg_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phavg_lm_z_coef)
summary(phavg_lm_z_coef_test)
stargazer(phpc_lm_z_coef_test, phcv_lm_z_coef_test, phavg_lm_z_coef_test)
stargazer(phpc_lm_z, phcv_lm_z, phavg_lm_z)
phpc_lm <- lm(phpc ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
missing_count +
country +
growing_season +
market, data = dataset)
phcv_lm <- lm(phcv ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
missing_count +
country +
growing_season +
market, data = dataset)
phavg_lm <- lm(phavg ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
missing_count +
country +
growing_season +
market, data = dataset)
phpc_lm_z <- lm(phpc ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
precip_anom_z * lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phpc_lm_z_coef <- as.data.frame(summary(phpc_lm_z)$coefficients)
phpc_lm_z_coef <- tibble::rownames_to_column(phpc_lm_z_coef, "variable")
phpc_lm_z_coef$variable <- str_remove(phpc_lm_z_coef$variable, "market")
phpc_lm_z_coef <- dplyr::select(phpc_lm_z_coef, variable, Estimate)
colnames(phpc_lm_z_coef) <- c("market", "estimate")
phpc_lm_z_coef <- merge(phpc_lm_z_coef, ti_vars, by = "market")
phpc_lm_z_coef <- as.data.frame(phpc_lm_z_coef)
phpc_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phpc_lm_z_coef)
summary(phpc_lm_z_coef_test)
phcv_lm_z <- lm(phcv ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
precip_anom_z * lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phcv_lm_z_coef <- as.data.frame(summary(phcv_lm_z)$coefficients)
phcv_lm_z_coef <- tibble::rownames_to_column(phcv_lm_z_coef, "variable")
phcv_lm_z_coef$variable <- str_remove(phcv_lm_z_coef$variable, "market")
phcv_lm_z_coef <- dplyr::select(phcv_lm_z_coef, variable, Estimate)
colnames(phcv_lm_z_coef) <- c("market", "estimate")
phcv_lm_z_coef <- merge(phcv_lm_z_coef, ti_vars, by = "market")
phcv_lm_z_coef <- as.data.frame(phcv_lm_z_coef)
phcv_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phcv_lm_z_coef)
summary(phcv_lm_z_coef_test)
phavg_lm_z <- lm(phavg ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
missing_count +
precip_anom_z * lead_temp_z +
country +
growing_season +
market, data = dataset)
phavg_lm_z_coef <- as.data.frame(summary(phavg_lm_z)$coefficients)
phavg_lm_z_coef <- tibble::rownames_to_column(phavg_lm_z_coef, "variable")
phavg_lm_z_coef$variable <- str_remove(phavg_lm_z_coef$variable, "market")
phavg_lm_z_coef <- dplyr::select(phavg_lm_z_coef, variable, Estimate)
colnames(phavg_lm_z_coef) <- c("market", "estimate")
phavg_lm_z_coef <- merge(phavg_lm_z_coef, ti_vars, by = "market")
phavg_lm_z_coef <- as.data.frame(phavg_lm_z_coef)
phavg_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phavg_lm_z_coef)
summary(phavg_lm_z_coef_test)
stargazer(phpc_lm_z, phcv_lm_z, phavg_lm_z)
stargazer(phpc_lm, phpc_lm_z, phcv_lm, phcv_lm_z, phavg_lm, phavg_lm_z)
stargazer(phpc_lm_z_coef_test, phcv_lm_z_coef_test, phavg_lm_z_coef_test)
phpc_lm <- lm(phpc ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
missing_count +
country +
growing_season +
market, data = dataset)
phcv_lm <- lm(phcv ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
missing_count +
country +
growing_season +
market, data = dataset)
phavg_lm <- lm(phavg ~ +
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
missing_count +
country +
growing_season +
market, data = dataset)
phpc_lm_z <- lm(phpc ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
precip_anom_z * lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phpc_lm_z_coef <- as.data.frame(summary(phpc_lm_z)$coefficients)
phpc_lm_z_coef <- tibble::rownames_to_column(phpc_lm_z_coef, "variable")
phpc_lm_z_coef$variable <- str_remove(phpc_lm_z_coef$variable, "market")
phpc_lm_z_coef <- dplyr::select(phpc_lm_z_coef, variable, Estimate)
colnames(phpc_lm_z_coef) <- c("market", "estimate")
phpc_lm_z_coef <- merge(phpc_lm_z_coef, ti_vars, by = "market")
phpc_lm_z_coef <- as.data.frame(phpc_lm_z_coef)
phpc_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phpc_lm_z_coef)
summary(phpc_lm_z_coef_test)
phcv_lm_z <- lm(phcv ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
precip_anom_z * lead_temp_z +
missing_count +
country +
growing_season +
market, data = dataset)
phcv_lm_z_coef <- as.data.frame(summary(phcv_lm_z)$coefficients)
phcv_lm_z_coef <- tibble::rownames_to_column(phcv_lm_z_coef, "variable")
phcv_lm_z_coef$variable <- str_remove(phcv_lm_z_coef$variable, "market")
phcv_lm_z_coef <- dplyr::select(phcv_lm_z_coef, variable, Estimate)
colnames(phcv_lm_z_coef) <- c("market", "estimate")
phcv_lm_z_coef <- merge(phcv_lm_z_coef, ti_vars, by = "market")
phcv_lm_z_coef <- as.data.frame(phcv_lm_z_coef)
phcv_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phcv_lm_z_coef)
summary(phcv_lm_z_coef_test)
phavg_lm_z <- lm(phavg ~ +
precip_anom_z +
lead_precip_z +
temp_anom_z +
lead_temp_z +
missing_count +
precip_anom_z * lead_temp_z +
country +
growing_season +
market, data = dataset)
phavg_lm_z_coef <- as.data.frame(summary(phavg_lm_z)$coefficients)
phavg_lm_z_coef <- tibble::rownames_to_column(phavg_lm_z_coef, "variable")
phavg_lm_z_coef$variable <- str_remove(phavg_lm_z_coef$variable, "market")
phavg_lm_z_coef <- dplyr::select(phavg_lm_z_coef, variable, Estimate)
colnames(phavg_lm_z_coef) <- c("market", "estimate")
phavg_lm_z_coef <- merge(phavg_lm_z_coef, ti_vars, by = "market")
phavg_lm_z_coef <- as.data.frame(phavg_lm_z_coef)
phavg_lm_z_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phavg_lm_z_coef)
summary(phavg_lm_z_coef_test)
stargazer(phpc_lm_z_coef_test, phcv_lm_z_coef_test, phavg_lm_z_coef_test)
test <- read.csv("/Users/azimmer/Downloads/allData.csv")
View(test)
colnames(test)
test <- dplyr::select(test, NAME, PROVINCE, Year, sum)
ggplot(test, aes(x = PROVINCE, y = sum)) +
geom_boxplot() +
facet_wrap(~Year)
test2 <- test %>%
group_by(PROVINCE) %>%
summarise(sum_prov = sum(sum))
View(test2)
test2 <- test %>%
group_by(PROVINCE, Year) %>%
summarise(sum_prov = sum(sum))
ggplot(test2, aes(x = Year, y = sum_prov)) +
geom_line() +
facet_wrap(~PROVINCE)
test2 <- test2 %>%
group_by(PROVINCE) %>%
mutate(mean = mean(sum_prov))
ggplot(test2, aes(x = Year, y = sum_prov)) +
geom_line() +
geom_line(aes(x = Year, y = mean)) +
facet_wrap(~PROVINCE)
ggplot(test2, aes(x = Year, y = sum_prov)) +
geom_line() +
geom_line(aes(x = Year, y = mean), fill = "red") +
facet_wrap(~PROVINCE)
ggplot(test2, aes(x = Year, y = sum_prov)) +
geom_line() +
geom_line(aes(x = Year, y = mean), color = "red") +
facet_wrap(~PROVINCE)
ggplot(test2, aes(x = Year, y = sum_prov)) +
geom_line() +
geom_line(aes(x = Year, y = mean), color = "red") +
facet_wrap(~PROVINCE) +
scale_y_continuous(labels = scales)
ggplot(test2, aes(x = Year, y = sum_prov)) +
geom_line() +
geom_line(aes(x = Year, y = mean), color = "red") +
facet_wrap(~PROVINCE) +
scale_y_continuous(labels = comma)
ggplot(test2, aes(x = Year, y = sum_prov)) +
geom_line() +
geom_line(aes(x = Year, y = mean), color = "red") +
facet_wrap(~PROVINCE)
