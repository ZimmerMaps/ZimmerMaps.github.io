, data = phavg_lm_coef)
summary(phavg_lm_coef_test)
phavg_lm_coef_test_country <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
country, data = phavg_lm_coef)
summary(phavg_lm_coef_test_country)
# Second Step Model - PHPC
phpc_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phpc_lm_coef)
summary(phpc_lm_coef_test)
phpc_lm_coef_test_country <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
country, data = phpc_lm_coef)
summary(phpc_lm_coef_test_country)
# Second Step Model - PHCV
phcv_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phcv_lm_coef)
summary(phcv_lm_coef_test)
phcv_lm_coef_test_country <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
country, data = phcv_lm_coef)
summary(phcv_lm_coef_test_country)
stargazer(phavg_lm, phpc_lm, phcv_lm)
stargazer(phavg_lm_coef_test, phpc_lm_coef_test, phcv_lm_coef_test, phavg_lm_coef_test_country, phpc_lm_coef_test_country, phcv_lm_coef_test_country)
test <- read_sav("/Users/azimmer/Downloads/zam_r7_data.sav")
install.packages("haven")
library(haven)
test <- read_sav("/Users/azimmer/Downloads/zam_r7_data.sav")
View(test)
colnames(test)
# Maize Price Analysis
# Andrew Zimmer
# March 2022
rm(list=ls()) #clear and close everything open
#### Packages ####
library(tidyverse)
library(stargazer)
library(ggpubr)
library(scales)
library(spdep)
#### SET-UP ####
dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset.csv")
#dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset_method2.csv")
dataset <- dataset[,-1]
#extract time-invariant variables
ti_vars <- dplyr::select(dataset, market, country, capital_distance_km, avg_neighbor_distance_km, esa_ag_percent,
log_pop_growth, pop_2015)
ti_vars <- ti_vars[!duplicated(ti_vars), ]
#make growing_season a factor
dataset$growing_season <- as.factor(dataset$growing_season)
missing_count_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/Missing Count Data/missing_count_data.csv")
missing_count_data <- missing_count_data[,-1]
dataset <- merge(dataset, missing_count_data, by = c("market", "country", "growing_season"))
#### Add in variables for backwardation
dataset <- dataset %>%                            # Add lagged column
group_by(market) %>%
arrange(growing_season) %>%
mutate(lead_precip = dplyr::lead(precip_anomaly, n = 1, default = NA)) %>%
mutate(lead_temp = dplyr::lead(temp_anomaly, n = 1, default = NA)) %>%
ungroup()
#add zscore
dataset <- dataset %>%
mutate(precip_anom_z_nom = (precip_anomaly - mean(precip_anomaly))/sd(precip_anomaly)) %>%
mutate(temp_anom_z_nom = (temp_anomaly - mean(temp_anomaly))/sd(temp_anomaly)) %>%
mutate(lead_precip_z_nom = (lead_precip - mean(lead_precip, na.rm=TRUE))/sd(lead_precip, na.rm=TRUE)) %>%
mutate(lead_temp_z_nom = (lead_temp - mean(lead_temp, na.rm=TRUE))/sd(lead_temp, na.rm=TRUE)) %>%
ungroup()
dataset <- dataset %>%
group_by(market) %>%
mutate(precip_anom_z = (precip_anomaly - mean(precip_anomaly))/sd(precip_anomaly),
temp_anom_z = (temp_anomaly - mean(temp_anomaly))/sd(temp_anomaly)) %>%
ungroup()
check <- dataset %>%
group_by(market) %>%
summarise(mean_anom = round(mean(precip_anom_z)))
#add log variable for IV's
dataset <- dataset %>%
mutate(phavg_log = log(phavg))
#make new column to define whether climate anomalies are positive or negative
dataset$p_anom_direction <- ifelse(sign(dataset$precip_anomaly) == -1, "negative",
ifelse(sign(dataset$precip_anomaly) == 0, "neutral", "positive"))
dataset$t_anom_direction <- ifelse(sign(dataset$temp_anomaly) == -1, "negative",
ifelse(sign(dataset$temp_anomaly) == 0, "neutral", "positive"))
#make new z score var for p and t based on their direction
dataset <- dataset %>%
group_by(market, p_anom_direction) %>%
mutate(precip_anom_z_direction = (precip_anomaly - mean(precip_anomaly))/sd(precip_anomaly)) %>%
ungroup()
dataset <- dataset %>%
group_by(market, p_anom_direction) %>%
mutate(temp_anom_z_direction = (temp_anomaly - mean(temp_anomaly))/sd(temp_anomaly)) %>%
ungroup()
#### RUN MODELS #####
#PHAVG
phavg_lm <- lm(phavg ~
precip_anom_z_direction +
temp_anom_z_direction +
precip_anom_z_direction * temp_anom_z_direction +
missing_count +
country +
growing_season +
market +
p_anom_direction +
t_anom_direction,
data = dataset)
summary(phavg_lm)
phavg_lm_coef <- as.data.frame(summary(phavg_lm)$coefficients)
phavg_lm_coef <- tibble::rownames_to_column(phavg_lm_coef, "variable")
phavg_lm_coef$variable <- str_remove(phavg_lm_coef$variable, "market")
phavg_lm_coef <- dplyr::select(phavg_lm_coef, variable, Estimate)
colnames(phavg_lm_coef) <- c("market", "estimate")
phavg_lm_coef <- merge(phavg_lm_coef, ti_vars, by = "market")
phavg_lm_coef <- as.data.frame(phavg_lm_coef)
#PHPC
phpc_lm <- lm(phpc ~
precip_anom_z_direction +
temp_anom_z_direction +
precip_anom_z_direction * temp_anom_z_direction +
missing_count +
country +
growing_season +
market +
p_anom_direction +
t_anom_direction,
data = dataset)
summary(phpc_lm)
phpc_lm_coef <- as.data.frame(summary(phpc_lm)$coefficients)
phpc_lm_coef <- tibble::rownames_to_column(phpc_lm_coef, "variable")
phpc_lm_coef$variable <- str_remove(phpc_lm_coef$variable, "market")
phpc_lm_coef <- dplyr::select(phpc_lm_coef, variable, Estimate)
colnames(phpc_lm_coef) <- c("market", "estimate")
phpc_lm_coef <- merge(phpc_lm_coef, ti_vars, by = "market")
phpc_lm_coef <- as.data.frame(phpc_lm_coef)
#PHCV
phcv_lm <- lm(phcv ~
precip_anom_z_direction +
temp_anom_z_direction +
precip_anom_z_direction * temp_anom_z_direction +
missing_count +
country +
growing_season +
market +
p_anom_direction +
t_anom_direction,
data = dataset)
summary(phcv_lm)
phcv_lm_coef <- as.data.frame(summary(phcv_lm)$coefficients)
phcv_lm_coef <- tibble::rownames_to_column(phcv_lm_coef, "variable")
phcv_lm_coef$variable <- str_remove(phcv_lm_coef$variable, "market")
phcv_lm_coef <- dplyr::select(phcv_lm_coef, variable, Estimate)
colnames(phcv_lm_coef) <- c("market", "estimate")
phcv_lm_coef <- merge(phcv_lm_coef, ti_vars, by = "market")
phcv_lm_coef <- as.data.frame(phcv_lm_coef)
# Second Step Model - PHAVG
phavg_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015)
, data = phavg_lm_coef)
summary(phavg_lm_coef_test)
phavg_lm_coef_test_country <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
country, data = phavg_lm_coef)
summary(phavg_lm_coef_test_country)
# Second Step Model - PHPC
phpc_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phpc_lm_coef)
summary(phpc_lm_coef_test)
phpc_lm_coef_test_country <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
country, data = phpc_lm_coef)
summary(phpc_lm_coef_test_country)
# Second Step Model - PHCV
phcv_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = phcv_lm_coef)
summary(phcv_lm_coef_test)
phcv_lm_coef_test_country <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
country, data = phcv_lm_coef)
summary(phcv_lm_coef_test_country)
stargazer(phavg_lm, phpc_lm, phcv_lm)
stargazer(phavg_lm_coef_test, phpc_lm_coef_test, phcv_lm_coef_test, phavg_lm_coef_test_country, phpc_lm_coef_test_country, phcv_lm_coef_test_country)
### Each country analysis
dataset_zam <- filter(dataset, country == "Zambia")
dataset_moz <- filter(dataset, country == "Mozambique")
dataset_mal <- filter(dataset, country == "Malawi")
#### PHAVG ####
#Zambia
zam_phavg_lm <- lm(phavg ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_zam)
summary(zam_phavg_lm)
#Mozambique
moz_phavg_lm <- lm(phavg ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_moz)
summary(moz_phavg_lm)
#Malawi
mal_phavg_lm <- lm(phavg ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_moz)
summary(mal_phavg_lm)
#### PHPC ####
#Zambia
zam_phpc_lm <- lm(phpc ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_zam)
summary(zam_phpc_lm)
#Mozambique
moz_phpc_lm <- lm(phpc ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_moz)
summary(moz_phpc_lm)
#Malawi
mal_phpc_lm <- lm(phpc ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_moz)
summary(mal_phpc_lm)
#### PHCV ####
zam_phcv_lm <- lm(phcv ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_zam)
summary(zam_phcv_lm)
#Mozambique
moz_phcv_lm <- lm(phcv ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_moz)
summary(moz_phcv_lm)
#Malawi
mal_phcv_lm <- lm(phcv ~
precip_anom_z +
temp_anom_z +
precip_anom_z * temp_anom_z +
missing_count +
growing_season +
market,
data = dataset_moz)
summary(mal_phcv_lm)
#### Prepare variables for the second step regression ####
#   Zambia - PHAVG
zam_phavg_lm_coef <- as.data.frame(summary(zam_phavg_lm)$coefficients)
zam_phavg_lm_coef <- tibble::rownames_to_column(zam_phavg_lm_coef, "variable")
zam_phavg_lm_coef$variable <- str_remove(zam_phavg_lm_coef$variable, "market")
zam_phavg_lm_coef <- dplyr::select(zam_phavg_lm_coef, variable, Estimate)
colnames(zam_phavg_lm_coef) <- c("market", "estimate")
zam_phavg_lm_coef <- merge(zam_phavg_lm_coef, ti_vars, by = "market")
zam_phavg_lm_coef <- as.data.frame(zam_phavg_lm_coef)
view(zam_phavg_lm_coef)
zam_phavg_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = zam_phavg_lm_coef)
summary(zam_phavg_lm_coef_test)
#   Zambia - PHPC
zam_phpc_lm_coef <- as.data.frame(summary(zam_phpc_lm)$coefficients)
zam_phpc_lm_coef <- tibble::rownames_to_column(zam_phpc_lm_coef, "variable")
zam_phpc_lm_coef$variable <- str_remove(zam_phpc_lm_coef$variable, "market")
zam_phpc_lm_coef <- dplyr::select(zam_phpc_lm_coef, variable, Estimate)
colnames(zam_phpc_lm_coef) <- c("market", "estimate")
zam_phpc_lm_coef <- merge(zam_phpc_lm_coef, ti_vars, by = "market")
zam_phpc_lm_coef <- as.data.frame(zam_phpc_lm_coef)
view(zam_phpc_lm_coef)
zam_phpc_lm_coef_tes <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = zam_phpc_lm_coef)
summary(zam_phpc_lm_coef_tes)
#   Zambia - PHCV
zam_phcv_lm_coef <- as.data.frame(summary(zam_phcv_lm)$coefficients)
zam_phcv_lm_coef <- tibble::rownames_to_column(zam_phcv_lm_coef, "variable")
zam_phcv_lm_coef$variable <- str_remove(zam_phcv_lm_coef$variable, "market")
zam_phcv_lm_coef <- dplyr::select(zam_phcv_lm_coef, variable, Estimate)
colnames(zam_phcv_lm_coef) <- c("market", "estimate")
zam_phcv_lm_coef <- merge(zam_phcv_lm_coef, ti_vars, by = "market")
zam_phcv_lm_coef <- as.data.frame(zam_phcv_lm_coef)
view(zam_phcv_lm_coef)
zam_phcv_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = zam_phcv_lm_coef)
summary(zam_phcv_lm_coef_test)
#   Mozambique - PHAVG
moz_phavg_lm_coef <- as.data.frame(summary(moz_phavg_lm)$coefficients)
moz_phavg_lm_coef <- tibble::rownames_to_column(moz_phavg_lm_coef, "variable")
moz_phavg_lm_coef$variable <- str_remove(moz_phavg_lm_coef$variable, "market")
moz_phavg_lm_coef <- dplyr::select(moz_phavg_lm_coef, variable, Estimate)
colnames(moz_phavg_lm_coef) <- c("market", "estimate")
moz_phavg_lm_coef <- merge(moz_phavg_lm_coef, ti_vars, by = "market")
moz_phavg_lm_coef <- as.data.frame(moz_phavg_lm_coef)
view(moz_phavg_lm_coef)
moz_phavg_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = moz_phavg_lm_coef)
summary(moz_phavg_lm_coef_test)
#   Mozambique - PHPC
moz_phpc_lm_coef <- as.data.frame(summary(moz_phpc_lm)$coefficients)
moz_phpc_lm_coef <- tibble::rownames_to_column(moz_phpc_lm_coef, "variable")
moz_phpc_lm_coef$variable <- str_remove(moz_phpc_lm_coef$variable, "market")
moz_phpc_lm_coef <- dplyr::select(moz_phpc_lm_coef, variable, Estimate)
colnames(moz_phpc_lm_coef) <- c("market", "estimate")
moz_phpc_lm_coef <- merge(moz_phpc_lm_coef, ti_vars, by = "market")
zam_phpc_lm_coef <- as.data.frame(moz_phpc_lm_coef)
view(moz_phpc_lm_coef)
moz_phpc_lm_coef_tes <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = moz_phpc_lm_coef)
summary(moz_phpc_lm_coef_tes)
#   Mozambique - PHCV
moz_phcv_lm_coef <- as.data.frame(summary(moz_phcv_lm)$coefficients)
moz_phcv_lm_coef <- tibble::rownames_to_column(moz_phcv_lm_coef, "variable")
moz_phcv_lm_coef$variable <- str_remove(moz_phcv_lm_coef$variable, "market")
moz_phcv_lm_coef <- dplyr::select(moz_phcv_lm_coef, variable, Estimate)
colnames(moz_phcv_lm_coef) <- c("market", "estimate")
moz_phcv_lm_coef <- merge(moz_phcv_lm_coef, ti_vars, by = "market")
moz_phcv_lm_coef <- as.data.frame(moz_phcv_lm_coef)
view(moz_phcv_lm_coef)
moz_phcv_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = moz_phcv_lm_coef)
summary(moz_phcv_lm_coef_test)
#   Malawi - PHAVG
mal_phavg_lm_coef <- as.data.frame(summary(mal_phavg_lm)$coefficients)
mal_phavg_lm_coef <- tibble::rownames_to_column(mal_phavg_lm_coef, "variable")
mal_phavg_lm_coef$variable <- str_remove(mal_phavg_lm_coef$variable, "market")
mal_phavg_lm_coef <- dplyr::select(mal_phavg_lm_coef, variable, Estimate)
colnames(mal_phavg_lm_coef) <- c("market", "estimate")
mal_phavg_lm_coef <- merge(mal_phavg_lm_coef, ti_vars, by = "market")
mal_phavg_lm_coef <- as.data.frame(mal_phavg_lm_coef)
view(mal_phavg_lm_coef)
mal_phavg_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = mal_phavg_lm_coef)
summary(mal_phavg_lm_coef_test)
#   Malawi - PHPC
mal_phpc_lm_coef <- as.data.frame(summary(mal_phpc_lm)$coefficients)
mal_phpc_lm_coef <- tibble::rownames_to_column(mal_phpc_lm_coef, "variable")
mal_phpc_lm_coef$variable <- str_remove(mal_phpc_lm_coef$variable, "market")
mal_phpc_lm_coef <- dplyr::select(mal_phpc_lm_coef, variable, Estimate)
colnames(mal_phpc_lm_coef) <- c("market", "estimate")
mal_phpc_lm_coef <- merge(mal_phpc_lm_coef, ti_vars, by = "market")
mal_phpc_lm_coef <- as.data.frame(mal_phpc_lm_coef)
view(mal_phpc_lm_coef)
mal_phpc_lm_coef_tes <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = mal_phpc_lm_coef)
summary(mal_phpc_lm_coef)
#   Malawi - PHCV
mal_phcv_lm_coef <- as.data.frame(summary(moz_phcv_lm)$coefficients)
mal_phcv_lm_coef <- tibble::rownames_to_column(mal_phcv_lm_coef, "variable")
mal_phcv_lm_coef$variable <- str_remove(mal_phcv_lm_coef$variable, "market")
mal_phcv_lm_coef <- dplyr::select(mal_phcv_lm_coef, variable, Estimate)
colnames(mal_phcv_lm_coef) <- c("market", "estimate")
mal_phcv_lm_coef <- merge(mal_phcv_lm_coef, ti_vars, by = "market")
mal_phcv_lm_coef <- as.data.frame(mal_phcv_lm_coef)
view(mal_phcv_lm_coef)
mal_phcv_lm_coef_test <- lm(estimate ~
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015), data = mal_phcv_lm_coef)
summary(mal_phcv_lm_coef_test)
msummary(list(zam_phavg_lm_coef_test, zam_phpc_lm_coef_tes, zam_phcv_lm_coef_test))
#### Packages ####
library(tidyverse)
library(stargazer)
library(ggpubr)
library(scales)
library(spdep)
#### SET-UP ####
dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset.csv")
#dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset_method2.csv")
dataset <- dataset[,-1]
#extract time-invariant variables
ti_vars <- dplyr::select(dataset, market, country, capital_distance_km, avg_neighbor_distance_km, esa_ag_percent,
log_pop_growth, pop_2015)
ti_vars <- ti_vars[!duplicated(ti_vars), ]
#make growing_season a factor
dataset$growing_season <- as.factor(dataset$growing_season)
missing_count_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/Missing Count Data/missing_count_data.csv")
missing_count_data <- missing_count_data[,-1]
dataset <- merge(dataset, missing_count_data, by = c("market", "country", "growing_season"))
dataset <- dataset %>%                            # Add lagged column
group_by(market) %>%
arrange(growing_season) %>%
mutate(lead_precip = dplyr::lead(precip_anomaly, n = 1, default = NA)) %>%
mutate(lead_temp = dplyr::lead(temp_anomaly, n = 1, default = NA)) %>%
ungroup()
#add zscore
dataset <- dataset %>%
mutate(precip_anom_z_nom = (precip_anomaly - mean(precip_anomaly))/sd(precip_anomaly)) %>%
mutate(temp_anom_z_nom = (temp_anomaly - mean(temp_anomaly))/sd(temp_anomaly)) %>%
mutate(lead_precip_z_nom = (lead_precip - mean(lead_precip, na.rm=TRUE))/sd(lead_precip, na.rm=TRUE)) %>%
mutate(lead_temp_z_nom = (lead_temp - mean(lead_temp, na.rm=TRUE))/sd(lead_temp, na.rm=TRUE)) %>%
ungroup()
dataset <- dataset %>%
group_by(market) %>%
mutate(precip_anom_z = (precip_anomaly - mean(precip_anomaly))/sd(precip_anomaly),
temp_anom_z = (temp_anomaly - mean(temp_anomaly))/sd(temp_anomaly)) %>%
ungroup()
library(dplyr)
dataset <- dataset %>%                            # Add lagged column
group_by(market) %>%
arrange(growing_season) %>%
mutate(lead_precip = dplyr::lead(precip_anomaly, n = 1, default = NA)) %>%
mutate(lead_temp = dplyr::lead(temp_anomaly, n = 1, default = NA)) %>%
ungroup()
library(tidyverse)
library(dplyr)
