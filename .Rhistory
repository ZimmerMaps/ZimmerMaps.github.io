#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_4))
#Q5
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in%
c("Q11.3#5_1", "Q11.3#5_2", "Q11.3#5_3", "Q11.3#5_4", "Q11.3#5_5", "Q11.3#5_6", "Q11.3#5_7", "Q11.3#5_8")] <-
c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")
raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
gather(food_type_5, reason, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")
#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_5))
#Q6
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in%
c("Q11.3#6_1", "Q11.3#6_2", "Q11.3#6_3", "Q11.3#6_4", "Q11.3#6_5", "Q11.3#6_6", "Q11.3#6_7", "Q11.3#6_8")] <-
c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")
raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
gather(food_type_6, district, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")
#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_6))
#Q7
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in%
c("Q11.3#7_1", "Q11.3#7_2", "Q11.3#7_3", "Q11.3#7_4", "Q11.3#7_5", "Q11.3#7_6", "Q11.3#7_7", "Q11.3#7_8")] <-
c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")
raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
gather(food_type_7, transport_mode, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")
#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_7))
#Q8
colnames(raw_place_ties_t3_long)[colnames(raw_place_ties_t3_long) %in%
c("Q11.3#8_1_1", "Q11.3#8_2_1", "Q11.3#8_3_1", "Q11.3#8_4_1", "Q11.3#8_5_1", "Q11.3#8_6_1", "Q11.3#8_7_1", "Q11.3#8_8_1")] <-
c("cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")
raw_place_ties_t3_long <- raw_place_ties_t3_long %>%
gather(food_type_8, minutes, "cereals", "pulses", "veg", "fruit", "meat_fish", "milk", "sugar_oil", "processed")
#remove spare rows
raw_place_ties_t3_long <- filter(raw_place_ties_t3_long, (food_type==food_type_8))
#remove columns no longer needed
raw_place_ties_t3_long <- raw_place_ties_t3_long %>% select(-c("food_type_2", "food_type_3", "food_type_4", "food_type_5", "food_type_6",
"food_type_7", "food_type_8"))
#add column to highlight table 1 - this urban area
raw_place_ties_t3_long$table_type <- "rural"
raw_place_ties_t2_long$minutes <- as.character(raw_place_ties_t2_long$minutes)
raw_place_ties_t3_long$minutes <- as.character(raw_place_ties_t3_long$minutes)
#### Merge All Three Tables Together
complete_dataset <- bind_rows(raw_place_ties_t1_long, raw_place_ties_t2_long, raw_place_ties_t3_long)
complete_dataset <- complete_dataset[!is.na(complete_dataset$Q1.3),]
complete_dataset <- complete_dataset[!is.na(complete_dataset$source_location),]
write.csv(complete_dataset, "/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/complete_dataset.csv")
#plot by town
test <- complete_dataset[complete_dataset$source_location!= "I do not get any of this food type from this source", ]
test <- test %>%
group_by(food_type, Q1.5, table_type) %>%
summarise(n = n()) %>%
mutate(freq = n/ sum(n)*100)
test <- test[complete.cases(test), ]
test$Q1.5 <- factor(test$Q1.5, levels = c("Pemba", "Mbabala", "Mpongwe", "Batoka", "Petauke", "Namwala", "Nyimba",
"Maamba", "Chongwe", "Itezhi-Tezhi", "Mkushi", "Mazabuka", "Kapiri Mposhi",
"Choma"))
test$table_type <- factor(test$table_type, levels = c("this_ua", "another_ua", "rural"))
ggplot(test, aes(x = Q1.5, y = freq, fill = table_type)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(x = "TOWN", y = "PERCENTAGE (%)", fill = "FOOD SOURCE") +
scale_fill_manual(labels = c("This Urban Area", "Another Urban Area", "Rural Area"), values = c("grey", "salmon", "sea green")) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=15)) +
facet_wrap(~food_type)
#replicate plot 1
test <- complete_dataset %>%
group_by(Q1.5, table_type, food_type, source_location) %>%
tally()
ggplot(test, aes(x = food_type, y = n, fill = source_location)) +
geom_bar(stat = "identity") +
theme_bw() +
scale_fill_brewer(palette = "Set3") +
labs(x = "FOOD", y = "COUNT", fill = "SOURCE") +
theme(legend.position = "bottom") +
facet_wrap(~table_type)
#### REDUCED COPING STRATEGY INDEX SCORE #####
rcsi_raw <- select(raw_qualtrics, "Q1.3", "Q9.2_1_1":"Q9.2_5_1")
#severity weight for q2 = 2
rcsi_raw$Q9.2_2_1 <- (rcsi_raw$Q9.2_2_1 * 2)
#severity weight for q4 = 3
rcsi_raw$Q9.2_2_1 <- (rcsi_raw$Q9.2_4_1 * 3)
#change columns to numeric
rcsi_raw$Q1.3 <- as.numeric(as.character(rcsi_raw$Q1.3))
rcsi_raw$Q9.2_2_1 <- as.numeric(as.character(rcsi_raw$Q9.2_1_1))
rcsi_raw$Q9.2_3_1 <- as.numeric(as.character(rcsi_raw$Q9.2_3_1))
rcsi_raw$Q9.2_4_1 <- as.numeric(as.character(rcsi_raw$Q9.2_4_1))
rcsi_raw$Q9.2_5_1 <- as.numeric(as.character(rcsi_raw$Q9.2_5_1))
#calculate rcsi score
rcsi_raw <- rcsi_raw %>%
replace(is.na(.), 0) %>%
mutate(rcsi_score = rowSums(.[2:6]))
#drop other columns
rcsi_raw <- select(rcsi_raw, Q1.3, rcsi_score)
#add categories
rcsi_raw$rcsi_category = cut(rcsi_raw$rcsi_score,c(-1,3,18,56))
levels(rcsi_raw$rcsi_category) = c("Low","Medium","High")
#### HH INCOME ####
hhincome_raw <- select(raw_qualtrics, "Q1.3", "Q5.13", "Q5.15":"Q5.20")
hhincome_raw <- hhincome_raw %>%
replace(is.na(.), 0) %>%
mutate(other_income = (rowSums(.[3:8])/12))
#drop other columns
hhincome_raw <- select(hhincome_raw, Q1.3, Q5.13, other_income)
hhincome_raw <- hhincome_raw %>%
replace(is.na(.), 0) %>%
mutate(total_income = (rowSums(.[2:3])))
#drop other columns
hhincome_raw <- select(hhincome_raw, Q1.3, total_income)
##### HH EXPENDITURE ####
hhexpenditure_raw <- select(raw_qualtrics, "Q1.3", "Q12.1", "Q12.2")
colnames(hhexpenditure_raw) <- c("Q1.3", "food_expenditure", "other_expenditure")
hhexpenditure_raw$total_expenditure <- rowSums(hhexpenditure_raw[,c("food_expenditure", "other_expenditure")], na.rm=TRUE)
#drop other columns
hhexpenditure_raw <- select(hhexpenditure_raw, Q1.3, food_expenditure, total_expenditure)
hhexpenditure_raw$food_expenditure <-  (hhexpenditure_raw$food_expenditure*4)
hhexpenditure_raw$total_expenditure <-  (hhexpenditure_raw$total_expenditure*4)
##### MERGING DATASETS TOGETHER ####
#remove dulicates in other variables
rcsi_raw <- rcsi_raw[!duplicated(rcsi_raw), ]
hhincome_raw <- hhincome_raw[!duplicated(hhincome_raw), ]
hhexpenditure_raw <- hhexpenditure_raw[!duplicated(hhexpenditure_raw), ]
#merge together large dataset
complete_dataset_othervars <- merge(complete_dataset, rcsi_raw, by = c("Q1.3"), all.x=T, all.y = T)
complete_dataset_othervars <- merge(complete_dataset_othervars, hhincome_raw, by = c("Q1.3"), all.x=T)
complete_dataset_othervars <- merge(complete_dataset_othervars, hhexpenditure_raw, by = c("Q1.3"), all.x=T)
#remove duplicates in overall dataset
complete_dataset_othervars <- complete_dataset_othervars[!duplicated(complete_dataset_othervars), ]
#plot some interesting stuff
ggplot(complete_dataset_othervars, aes(x = total_income, y = total_expenditure, color = rcsi_score)) +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
geom_point() +
labs(x = "MONTHLY HH INCOME", y = "MONTHLY HH EXPENDITURE", color = "RCSI")
ggplot(complete_dataset_othervars, aes(x = total_income, y = rcsi_score, color = Q1.5)) +
geom_point() +
labs(x = "TOTAL HH INCOME", y = "RCSI SCORE", color = "TOWN")
rcsi_plotting <- dplyr::select(complete_dataset_othervars, Q1.3, Q1.5, rcsi_score, total_income)
rcsi_plotting <- rcsi_plotting[!duplicated(rcsi_plotting),]
rcsi_plotting <-  rcsi_plotting %>% drop_na(Q1.5)
rcsi_plotting$rcsi_score <- as.numeric(rcsi_plotting$rcsi_score)
rcsi_income_table <- rcsi_plotting %>%
group_by(Q1.5) %>%
summarise(
count = n(),
min_rcsi = min(rcsi_score),
mean_rcsi = mean(rcsi_score),
median_rcsi = median(rcsi_score),
max_rcsi = max(rcsi_score),
min_income= min(total_income),
mean_income = mean(total_income),
median_income = median(total_income),
max_income = max(total_income))
grid.table(rcsi_income_table)
ggplot(rcsi_plotting, aes(y = rcsi_score, x = Q1.5)) +
geom_boxplot()
ggplot(rcsi_plotting, aes(y = total_income, x = Q1.5)) +
geom_boxplot()
write.csv(complete_dataset_othervars, "/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/complete_dataset_othervars.csv")
##### CITY LEVEL DATA ####
#POP data from Landscan 2018
town <- c('Batoka', 'Choma', 'Chongwe', 'Itezhi-Tezhi', 'Kapiri Mposhi', 'Maamba', 'Mazabuka',
'Mbabala', 'Mkushi', 'Mpongwe', 'Namwala', 'Nyimba', 'Pemba', 'Petauke')
population <- c(5341, 64085,	13998,	14426,	56193,	8712,	35055,	1076,	18486,	4882,	7839,	8118,	467,	7041)
town_populations <- data.frame(town, population)
population_plot <- town_populations %>%
mutate(town = fct_reorder(town, population)) %>%
ggplot(aes(x = town, y = population)) +
geom_bar(stat = "identity", fill = '#004225') +
theme_bw() +
labs(x = "", y = "Population (2018)") +
scale_y_continuous(labels = scales::comma) +
theme(axis.text.x = element_blank(),
axis.ticks = element_blank())
population_plot
ggarrange(population_plot, town_plot, nrow = 2, ncol = 1)
joined_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/complete_dataset.csv")
joined_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/complete_dataset_othervars.csv")
joined_data <- joined_data[joined_data$source_location!= "I do not get any of this food type from this source", ]
joined_data <- joined_data[ -c(1) ]
#remove problem hhid
joined_data <- joined_data[joined_data$Q1.3 != 2968, ]
#all food types
num_total_food_source <- joined_data %>% group_by(Q1.3) %>% tally()
#just cereals
num_cereal_source <- joined_data %>%
subset(food_type == "cereals") %>%
group_by(Q1.3) %>%
tally()
food_source <- merge(num_total_food_source, num_cereal_source, by = "Q1.3")
colnames(food_source) <- c("Q1.3", "num_total_foodsource", "num_cerealsource")
joined_data <- merge(joined_data, food_source, by = "Q1.3", all.x =T)
View(joined_data)
colnames(joined_data)
pca_data <- dplyr:select(joined_data, Q1.3, Q1.5, rcsi_score, total_income, food_expenditure, num_total_food_source, num_cereal_source)
pca_data <- select(joined_data, Q1.3, Q1.5, rcsi_score, total_income, food_expenditure, num_total_food_source, num_cereal_source)
pca_data <- dplyr::select(joined_data, Q1.3, Q1.5, rcsi_score, total_income, food_expenditure, num_total_food_source, num_cereal_source)
library(dplyr)
pca_data <- dplyr::select(joined_data, Q1.3, Q1.5, rcsi_score, total_income, food_expenditure, num_total_food_source, num_cereal_source)
library(tidyverse)
library(ggplot2)
rm(list=ls()) #clear and close everything open
joined_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/complete_dataset_othervars.csv")
joined_data <- joined_data[joined_data$source_location!= "I do not get any of this food type from this source", ]
joined_data <- joined_data[ -c(1) ]
#remove problem hhid
joined_data <- joined_data[joined_data$Q1.3 != 2968, ]
#all food types
num_total_food_source <- joined_data %>% group_by(Q1.3) %>% tally()
#just cereals
num_cereal_source <- joined_data %>%
subset(food_type == "cereals") %>%
group_by(Q1.3) %>%
tally()
food_source <- merge(num_total_food_source, num_cereal_source, by = "Q1.3")
colnames(food_source) <- c("Q1.3", "num_total_foodsource", "num_cerealsource")
joined_data <- merge(joined_data, food_source, by = "Q1.3", all.x =T)
pca_data <- dplyr::select(joined_data, Q1.3, Q1.5, rcsi_score, total_income, food_expenditure, num_total_food_source, num_cereal_source)
pca_data <- dplyr::select(joined_data, "Q1.3", "Q1.5", "rcsi_score", "total_income",
"food_expenditure", "num_total_food_source", "num_cereal_source")
#all food types
num_total_food_source <- joined_data %>% group_by(Q1.3) %>% tally()
#just cereals
num_cereal_source <- joined_data %>%
subset(food_type == "cereals") %>%
group_by(Q1.3) %>%
tally()
food_source <- merge(num_total_food_source, num_cereal_source, by = "Q1.3")
colnames(food_source) <- c("Q1.3", "num_total_foodsource", "num_cerealsource")
joined_data <- merge(joined_data, food_source, by = "Q1.3", all.x =T)
pca_data <- dplyr::select(joined_data, "Q1.3", "Q1.5", "rcsi_score", "total_income",
"food_expenditure", "num_total_food_source", "num_cereal_source")
pca_data <- dplyr::select(joined_data, "Q1.3", "Q1.5", "rcsi_score", "total_income",
"food_expenditure", "num_total_foodsource", "num_cerealsource")
library(tidyverse)
library(ggplot2)
rm(list=ls()) #clear and close everything open
joined_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/complete_dataset_othervars.csv")
joined_data <- joined_data[joined_data$source_location!= "I do not get any of this food type from this source", ]
joined_data <- joined_data[ -c(1) ]
#remove problem hhid
joined_data <- joined_data[joined_data$Q1.3 != 2968, ]
#create a # food sources variable
#all food types
num_total_food_source <- joined_data %>% group_by(Q1.3) %>% tally()
#just cereals
num_cereal_source <- joined_data %>%
subset(food_type == "cereals") %>%
group_by(Q1.3) %>%
tally()
food_source <- merge(num_total_food_source, num_cereal_source, by = "Q1.3")
colnames(food_source) <- c("Q1.3", "num_total_foodsource", "num_cerealsource")
joined_data <- merge(joined_data, food_source, by = "Q1.3", all.x =T)
View(joined_data)
pca_data <- dplyr::select(joined_data, "Q1.3", "Q1.5", "rcsi_score", "total_income",
"food_expenditure", "num_total_foodsource", "num_cerealsource")
pca_data <- pca_data %>% distinct()
write.csv(pca_data, "/Users/azimmer/Downloads/pca_data.csv")
rm(list=ls()) #clear and close everything open
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
View(pca_data)
pca_1 <- prcomp(pca_data[,c(2:13)], center = T, scale = T)
rm(list=ls()) #clear and close everything open
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_1 <- prcomp(pca_data[,c(2:13)], center = T, scale = T)
summary(pca_1)
library(devtools)
install_github("vqv/ggbiplot")
ggbiplot(pca_1)
library(ggbiplot)
ggbiplot(pca_1)
summary(pca_1)
fviz_eig(pca_1)
library(factoextra)
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_1 <- prcomp(pca_data[,c(2:13)], center = T, scale = T)
summary(pca_1)
fviz_eig(pca_1)
library(factoextra)
install.packages("factoextra")
library(factoextra)
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_1 <- prcomp(pca_data[,c(2:13)], center = T, scale = T)
summary(pca_1)
fviz_eig(pca_1)
fviz_pca_ind(pca_1,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
loadings*comp.sdev
loadings*pca_1
# Helper function
#::::::::::::::::::::::::::::::::::::::::
var_coord_func <- function(loadings, comp.sdev){
loadings*comp.sdev
}
# Compute Coordinates
#::::::::::::::::::::::::::::::::::::::::
loadings <- res.pca$rotation
# Compute Coordinates
#::::::::::::::::::::::::::::::::::::::::
loadings <- pca_1$rotation
sdev <- pca_1$sdev
var.coord <- t(apply(loadings, 1, var_coord_func, sdev))
View(var.coord)
head(var.coord[, 1:4])
head(var.coord[, 1:12])
head(var.coord[, 1:4])
var.coord[, 1:4])
var.coord[, 1:4]
fviz_pca_var(pca_1, col.var = "black")
pca_1 <- prcomp(pca_data[,c(3:13)], center = T, scale = T)
summary(pca_1)
fviz_eig(pca_1)
fviz_pca_var(pca_1, col.var = "black")
fviz_pca_ind(pca_1,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
# Helper function
#::::::::::::::::::::::::::::::::::::::::
var_coord_func <- function(loadings, comp.sdev){
loadings*comp.sdev
}
# Compute Coordinates
#::::::::::::::::::::::::::::::::::::::::
loadings <- pca_1$rotation
sdev <- pca_1$sdev
var.coord <- t(apply(loadings, 1, var_coord_func, sdev))
var.coord[, 1:4]
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale = T)
summary(pca_1)
fviz_eig(pca_1)
fviz_pca_var(pca_1, col.var = "black")
fviz_pca_ind(pca_1,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
# Helper function
#::::::::::::::::::::::::::::::::::::::::
var_coord_func <- function(loadings, comp.sdev){
loadings*comp.sdev
}
# Compute Coordinates
#::::::::::::::::::::::::::::::::::::::::
loadings <- pca_1$rotation
sdev <- pca_1$sdev
var.coord <- t(apply(loadings, 1, var_coord_func, sdev))
var.coord[, 1:4]
View(pca_1)
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale = T)
summary(pca_1)
autoplot(pca_1, data = pca_data, color = Q1.5)
autoplot(pca_1, data = pca_data, color = "Q1.5")
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
autoplot(pca_1)
library(devtools)
install_github('sinhrks/ggfortify')
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
library(factoextra)
library(devtools)
library(ggfortify)
library(ggplot2)
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
autoplot(pca_1, data = pca_data, color = "Q1.5")
autoplot(pca_1, data = pca_data, color = "Q1.5")
autoplot(pca_1, data = pca_data, fill = "Q1.5")
autoplot(pca_1, data = pca_data, color = "Q1.5")
pca_data$Q1.5 <- as.factor(pca_data$Q1.5)
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
autoplot(pca_1, data = pca_data, color = "Q1.5")
pca_data$Q1.5 <- as.factor(as.character(pca_data$Q1.5))
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
typeof(pca_data$Q1.5)
pca_data$Q1.5 <- as.factor(as.numeric(pca_data$Q1.5))
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
typeof(pca_data$Q1.5)
pca_data[,'Q1.5']<-factor(pca_data[,'Q1.5'])
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
typeof(pca_data$Q1.5)
pca_data[,'Q1.5']<-as.factor(pca_data[,'Q1.5'])
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
# Helper function
#::::::::::::::::::::::::::::::::::::::::
var_coord_func <- function(loadings, comp.sdev){
loadings*comp.sdev
}
rm(list=ls()) #clear and close everything open
library(factoextra)
library(devtools)
library(ggfortify)
library(ggplot2)
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_data[,'Q1.5']<-as.factor(pca_data[,'Q1.5'])
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
pca_data$Q1.5 <- as.factor(pca_data$Q1.5)
typeof(pca_data$Q1.5)
pca_data$Q1.5 <- as.character.factor(pca_data$Q1.5)
typeof(pca_data$Q1.5)
pca_data$Q1.5 <_ as.factor(pca_data$Q1.5)
pca_data$Q1.5 <- as.factor(pca_data$Q1.5)
typeof(pca_data$Q1.5)
rm(list=ls()) #clear and close everything open
library(factoextra)
library(devtools)
library(ggfortify)
library(ggplot2)
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
pca_data$Q1.5 <- as.factor(pca_data$Q1.5)
typeof(pca_data$Q1.5)
pca_data$Q1.5 <- as.factor(as.character(pca_data$Q1.5))
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
rm(list=ls()) #clear and close everything open
library(factoextra)
library(devtools)
library(ggfortify)
library(ggplot2)
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
pca_data$Q1.5 <- as.factor(as.character(pca_data$Q1.5))
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
typeof(pca_data$Q1.5)
pca_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Urban Transformations Paper/Datasets/pca_data.csv")
pca_data <- pca_data[complete.cases(pca_data), ]
typeof(pca_data$Q1.5)
class(pca_data$Q1.5)
pca_data$Q1.5 <- as.factor(pca_data$Q1.5)
class(pca_data$Q1.5)
pca_1 <- prcomp(pca_data[,c(3,4,5,6,7,8,10,11,12,13)], center = T, scale. = T)
summary(pca_1)
autoplot(pca_1)
autoplot(pca_1, data = pca_data, color = "Q1.5")
class(pca_data$Q1.5)
typeof(pca_data$Q1.5)
storage.mode(pca_data$Q1.5) <- "factor"
autoplot(pca_1, data = pca_data, color = "Q1.5")
autoplot(pca_1, data = pca_data, color = "Q1.3")
df <- iris[1:4]
pca_res <- prcomp(df, scale. = TRUE)
autoplot(pca_res)
autoplot(pca_res, data = iris, colour = 'Species')
View(df)
iris
df <- pca_data[3:13]
pca_res <- prcomp(df, scale. = TRUE)
summary(pca_res)
autoplot(pca_res)
autoplot(pca_res, data = pca_data, colour = 'Q1.5')
autoplot(pca_res, data = pca_data, colour = 'Q1.5', loadings = TRUE, loadings.label = TRUE))
autoplot(pca_res, data = pca_data, colour = 'Q1.5', loadings = TRUE, loadings.label = TRUE)
autoplot(pam(pca_data[-5], 3), frame = TRUE, frame.type = 'norm')
library(cluster)
autoplot(clara(pca_data[-5], 3))
autoplot(clara(pca_data[3:13], ))
autoplot(clara(pca_data[3:13], 5))
autoplot(clara(pca_data[4], 5))
autoplot(clara(pca_data[-4], 5))
autoplot(clara(pca_data[10:13], 5))
autoplot(clara(pca_data[3:13], 5))
autoplot(pca_res, data = pca_data, colour = 'Q1.5', loadings = TRUE, loadings.label = TRUE)
autoplot(pca_res, data = pca_data, colour = 'Q1.5')
