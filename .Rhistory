colnames(interpolated_test) <- c("date", "country", "market", "interpolated_usd_price")
colnames(spline_test) <- c("date", "country", "market", "splined_usd_price")
colnames(kalman_test) <- c("date", "country", "market", "kalman_usd_price")
test_df <- merge(useful_cleaned_wfp_data, interpolated_test, by = c("date", "country", "market"))
test_df <- merge(test_df, spline_test, by = c("date", "country", "market"))
test_df <- merge(test_df, kalman_test, by = c("date", "country", "market"))
View(test_df)
test_df_selected <- test_df %>%
filter(market %in% c("Bvumbwe", "Lilongwe", "Nkhotakota"))
ggplot(test_df, aes(x = date)) +
geom_line(aes(y = usd_price), color = 'black', size = 3) +
geom_line(aes(y = interpolated_usd_price), color = 'red', size =1) +
facet_wrap(~market)
# Maize Price Analysis
# Andrew Zimmer
# March 2022
rm(list=ls()) #clear and close everything open
#### Packages ####
library(tidyverse)
library(stargazer)
library(ggpubr)
library(scales)
library(spdep)
#### Read in Dataset ####
dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset.csv")
#dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset_method2.csv")
dataset <- dataset[,-1]
#make growing_season a factor
dataset$growing_season <- as.factor(dataset$growing_season)
mean(dataset$phpc)
mean(dataset$phavg)
#GPS DATA
#GPS Location Data
gps_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/WFP Data/GPS Data/MarketsofSouthernAfrica.csv")
gps_data <- dplyr::select(gps_data, Market, Country, Latitude, Longitude)
# Maize Price Analysis
# Andrew Zimmer
# March 2022
rm(list=ls()) #clear and close everything open
#### Packages ####
library(tidyverse)
library(stargazer)
library(ggpubr)
library(scales)
library(spdep)
#### Read in Dataset ####
dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset.csv")
#dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset_method2.csv")
dataset <- dataset[,-1]
#make growing_season a factor
dataset$growing_season <- as.factor(dataset$growing_season)
mean(dataset$phpc)
mean(dataset$phavg)
view <- dataset %>%
group_by(growing_season, country) %>%
summarise(mean = mean(phpc))
### Merge in missing_count_data
missing_count_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/Missing Count Data/missing_count_data.csv")
missing_count_data <- missing_count_data[,-1]
dataset <- merge(dataset, missing_count_data, by = c("market", "country", "growing_season"))
#### Add in variables for backwardation
dataset <- dataset %>%                            # Add lagged column
group_by(market) %>%
arrange(growing_season) %>%
mutate(lead_precip = dplyr::lead(precip_anomaly, n = 1, default = NA)) %>%
mutate(lead_temp = dplyr::lead(temp_anomaly, n = 1, default = NA)) %>%
mutate(lag_precip = dplyr::lag(precip_anomaly, n = 1, default = NA)) %>%
mutate(lag_temp = dplyr::lag(temp_anomaly, n = 1, default = NA))
#### Make Z Score Dataset
dataset_zscore <- dataset %>%
mutate(zscore_capital_distance_km = (capital_distance_km - mean(capital_distance_km))/sd(capital_distance_km)) %>%
mutate(zscore_neighbor_distance_km = (neighbor_distance_km - mean(neighbor_distance_km))/sd(neighbor_distance_km)) %>%
mutate(zscore_avg_neighbor_distance_km = (avg_neighbor_distance_km - mean(avg_neighbor_distance_km))/sd(avg_neighbor_distance_km)) %>%
mutate(zscore_avg_neighbor_distance_50k_km = (avg_neighbor_distance_50k_km - mean(avg_neighbor_distance_50k_km))/sd(avg_neighbor_distance_50k_km)) %>%
mutate(zscore_precip_seasonal_total = (precip_seasonal_total - mean(precip_seasonal_total))/sd(precip_seasonal_total)) %>%
mutate(zscore_precip_climatology = (precip_climatology - mean(precip_climatology))/sd(precip_climatology)) %>%
mutate(zscore_precip_anomaly = (precip_anomaly - mean(precip_anomaly))/sd(precip_anomaly)) %>%
mutate(zscore_temp_seasonal_total = (temp_seasonal_total - mean(temp_seasonal_total))/sd(temp_seasonal_total)) %>%
mutate(zscore_temp_climatology = (temp_climatology - mean(temp_climatology))/sd(temp_climatology)) %>%
mutate(zscore_temp_anomaly = (temp_anomaly - mean(temp_anomaly))/sd(temp_anomaly)) %>%
mutate(zscore_vpd_seasonal_total = (vpd_seasonal_total - mean(vpd_seasonal_total))/sd(vpd_seasonal_total)) %>%
mutate(zscore_vpd_climatology = (vpd_climatology - mean(vpd_climatology))/sd(vpd_climatology)) %>%
mutate(zscore_vpd_anomaly = (vpd_anomaly - mean(vpd_anomaly))/sd(vpd_anomaly)) %>%
mutate(zscore_esa_ag_percent = (esa_ag_percent - mean(esa_ag_percent))/sd(esa_ag_percent)) %>%
mutate(zscore_pop_2015 = (pop_2015 - mean(pop_2015))/sd(pop_2015)) %>%
mutate(zscore_log_pop_growth = (log_pop_growth - mean(log_pop_growth))/sd(log_pop_growth))
#### SUMMARY STATISTICS ####
#number of markets per country - Malawi (32), Mozambique (10), Zambia (32), Total (74)
#number of markets per country (dataset 2) - Malawi (111), Mozambique (21), Zambia (60), Total (192)
dataset %>%
group_by(country) %>%
tally()
summarise(unique = n_distinct(market))
summary_stats <- select(dataset, phpc, phcv, phavg, precip_anomaly, temp_anomaly, capital_distance_km, avg_neighbor_distance_km, esa_ag_percent,
log_pop_growth, pop_2015)
summary_stats_table <- do.call(cbind, lapply(summary_stats, summary))
#plot price change through time
## PHPC
avg_phpc <- dataset %>%
group_by(country, growing_season) %>%
summarise(mean_phpc = mean(phpc))
mean_phpc_plot <- ggplot(avg_phpc, aes(x = growing_season, y = mean_phpc, group = country)) +
geom_line(aes(color = country)) +
theme_bw() +
labs(x = "Growing Season", y = "Mean PHPC", color = "")
mean_phpc_plot
## PHCV
avg_phcv<- dataset %>%
group_by(country, growing_season) %>%
summarise(mean_phcv = mean(phcv))
mean_phcv_plot <- ggplot(avg_phcv, aes(x = as.factor(growing_season), y = mean_phcv, group = country)) +
geom_boxplot(aes(color = country)) +
theme_bw() +
labs(x = "Growing Season", y = "Mean PHCV", color = "")
## PHAVG
avg_phavg<- dataset %>%
group_by(country, growing_season) %>%
summarise(mean_phavg = mean(phavg))
mean_phavg_plot <- ggplot(avg_phavg, aes(x = growing_season, y = mean_phavg, group = country)) +
geom_line(aes(color = country)) +
theme_bw() +
labs(x = "Growing Season", y = "Mean PHAVG", color = "")
ggarrange(mean_phpc_plot, mean_phcv_plot, mean_phavg_plot, nrow = 3, ncol = 1, common.legend = T)
## Variation in distances
distance_plot_data <- dplyr::select(dataset, market, country, capital_distance_km, neighbor_distance_km, avg_neighbor_distance_km, avg_neighbor_distance_50k_km)
distance_plot_data <- distance_plot_data[!duplicated(distance_plot_data), ]
distance_plot_data <- distance_plot_data %>% gather(distance_type, distance_km, capital_distance_km:avg_neighbor_distance_50k_km)
ggplot(distance_plot_data, aes(x = distance_type, y =  distance_km, fill = country)) +
geom_boxplot() +
theme_bw() +
labs(x = "Distance Variable", y = "Distance (km)", fill = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
coord_flip()
## Variation in land use
landuse_plot_data <- dplyr::select(dataset, market, country, esa_ag_percent)
landuse_plot_data <- landuse_plot_data[!duplicated(landuse_plot_data), ]
ggplot(landuse_plot_data, aes(x = country, y =  esa_ag_percent, fill = country)) +
geom_boxplot() +
theme_bw() +
labs(x = "Country", y = "Percentage of District in Agriculture", fill = "")
## Variation in population
pop_plot_data <- dplyr::select(dataset, market, country, pop_2015)
pop_plot_data <- pop_plot_data[!duplicated(pop_plot_data), ]
ggplot(pop_plot_data, aes(x = country, y =  pop_2015, fill = country)) +
geom_boxplot() +
theme_bw() +
scale_y_log10() +
labs(x = "Country", y = "District Population (2015)", fill = "") +
scale_y_continuous(label = comma)
## Variation in population growth
popgrowth_plot_data <- dplyr::select(dataset, market, country, log_pop_growth)
popgrowth_plot_data <- popgrowth_plot_data[!duplicated(popgrowth_plot_data), ]
ggplot(popgrowth_plot_data, aes(x = country, y =  log_pop_growth, fill = country)) +
geom_boxplot() +
theme_bw() +
labs(x = "Country", y = "District Population Growth ('00-'15)", fill = "")
## Variation in climate anomaly
climate_anomaly_plot <- dplyr::select(dataset, market, country, growing_season, precip_anomaly, temp_anomaly, vpd_anomaly)
climate_anomaly_plot <- climate_anomaly_plot[!duplicated(climate_anomaly_plot), ]
climate_anomaly_plot <- climate_anomaly_plot %>%
gather(climate_var, anomaly_value, precip_anomaly:vpd_anomaly)
ggplot(climate_anomaly_plot, aes(x = growing_season, y =  anomaly_value, fill = country)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~climate_var) +
labs(x = "Growing Season", y = "Anomaly Value", fill = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
## Variation in climate seasonal total
climate_total_plot <- dplyr::select(dataset, market, country, growing_season, precip_seasonal_total, temp_seasonal_total, vpd_seasonal_total)
climate_total_plot <- climate_total_plot[!duplicated(climate_total_plot), ]
climate_total_plot <- climate_total_plot %>%
gather(climate_var, seasonal_total_value, precip_seasonal_total:vpd_seasonal_total)
ggplot(climate_total_plot, aes(x = growing_season, y =  seasonal_total_value, fill = country)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~climate_var, scales = "free") +
labs(x = "Growing Season", y = "Anomaly Value", fill = "") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#### Filter out each country individually ####
dataset_zambia <- dataset %>% filter(country == "Zambia")
dataset_mozambique <- dataset %>% filter(country == "Mozambique")
dataset_malawi <- dataset %>% filter(country == "Malawi")
#### Run Correlations for entire dataset ####
correlation_dataset <- dplyr::select(dataset, growing_season, phpc, phcv, phavg, capital_distance_km, neighbor_distance_km, avg_neighbor_distance_km,
avg_neighbor_distance_50k_km, precip_seasonal_total, precip_climatology, precip_anomaly, temp_seasonal_total,
temp_climatology, temp_anomaly, vpd_seasonal_total, vpd_climatology, vpd_anomaly, esa_ag_percent, pop_2015,
log_pop_growth)
correlation_dataset[] <- lapply(correlation_dataset, as.numeric)
cormat <- round(cor(correlation_dataset),2)
head(cormat)
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
ggplot(melted_cormat, aes(Var1, Var2, fill=value)) +
geom_tile() +
geom_text(aes(label = value)) +
labs(x = NULL, y = NULL, fill = "Pearson's\nCorrelation") +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
theme_bw() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#### ZAMBIAN Correlations ####
correlation_dataset <- dplyr::select(dataset_zambia, growing_season, phpc, phcv, phavg, capital_distance_km, neighbor_distance_km, avg_neighbor_distance_km,
avg_neighbor_distance_50k_km, precip_seasonal_total, precip_climatology, precip_anomaly, temp_seasonal_total,
temp_climatology, temp_anomaly, vpd_seasonal_total, vpd_climatology, vpd_anomaly, esa_ag_percent, pop_2015,
log_pop_growth)
correlation_dataset[] <- lapply(correlation_dataset, as.numeric)
cormat <- round(cor(correlation_dataset),2)
head(cormat)
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
ggplot(melted_cormat, aes(Var1, Var2, fill=value)) +
geom_tile() +
geom_text(aes(label = value)) +
labs(x = NULL, y = NULL, fill = "Pearson's\nCorrelation") +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
theme_bw() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#### MALAWI Correlations ####
correlation_dataset <- dplyr::select(dataset_malawi, growing_season, phpc, phcv, phavg, capital_distance_km, neighbor_distance_km, avg_neighbor_distance_km,
avg_neighbor_distance_50k_km, precip_seasonal_total, precip_climatology, precip_anomaly, temp_seasonal_total,
temp_climatology, temp_anomaly, vpd_seasonal_total, vpd_climatology, vpd_anomaly, esa_ag_percent, pop_2015,
log_pop_growth)
correlation_dataset[] <- lapply(correlation_dataset, as.numeric)
cormat <- round(cor(correlation_dataset),2)
head(cormat)
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
ggplot(melted_cormat, aes(Var1, Var2, fill=value)) +
geom_tile() +
geom_text(aes(label = value)) +
labs(x = NULL, y = NULL, fill = "Pearson's\nCorrelation") +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
theme_bw() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#### MOZAMBIQUE Correlations ####
correlation_dataset <- dplyr::select(dataset_mozambique, growing_season, phpc, phcv, phavg, capital_distance_km, neighbor_distance_km, avg_neighbor_distance_km,
avg_neighbor_distance_50k_km, precip_seasonal_total, precip_climatology, precip_anomaly, temp_seasonal_total,
temp_climatology, temp_anomaly, vpd_seasonal_total, vpd_climatology, vpd_anomaly, esa_ag_percent, pop_2015,
log_pop_growth)
correlation_dataset[] <- lapply(correlation_dataset, as.numeric)
cormat <- round(cor(correlation_dataset),2)
head(cormat)
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
ggplot(melted_cormat, aes(Var1, Var2, fill=value)) +
geom_tile() +
geom_text(aes(label = value)) +
labs(x = NULL, y = NULL, fill = "Pearson's\nCorrelation") +
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
theme_bw() +
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
##### Make dataset with fixed effect variables and random effect variables for growing season and country ####
library(lme4)
#### Model 1 - Entire Dataset v PHPC, PHCV, PHAVG ####
# Model 1 - All market/year combinations, with climate anomalies
data(Produc, package = "plm")
dataset$growing_season <- as.factor(dataset$growing_season)
phpc_model_1 <- lm(phpc ~
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
missing_count +
growing_season +
country +
market, data = dataset)
summary(phpc_model_1)
nobs(phpc_model_1)
#Z Score model 1
z_phpc_model_1 <- lm(phpc ~
zscore_precip_anomaly +
zscore_temp_anomaly +
zscore_capital_distance_km +
zscore_avg_neighbor_distance_km +
zscore_esa_ag_percent +
zscore_log_pop_growth +
zscore_pop_2015 +
growing_season +
country,  data = dataset_zscore)
summary(z_phpc_model_1)
# extract coefficients
coefs <- data.frame(coef(summary(phpc_model_1)))
phpc_model_1 <- lm(phpc ~
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
missing_count +
growing_season +
country +
market, data = dataset)
summary(phpc_model_1)
nobs(phpc_model_1)
# extract coefficients
coefs <- data.frame(coef(summary(phpc_model_1)))
phcv_model_1 <- lm(phcv ~
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
missing_count +
growing_season +
country +
market,  data = dataset)
summary(phcv_model_1)
# extract coefficients
coefs <- data.frame(coef(summary(phcv_model_1)))
# use normal distribution to approximate p-value
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
phavg_model_1 <- lm(phavg ~
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
missing_count +
growing_season +
country +
market,  data = dataset)
summary(phavg_model_1)
phpc_model_1 <- lm(phpc ~
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
missing_count +
growing_season +
country, data = dataset)
summary(phpc_model_1)
phcv_model_1 <- lm(phcv ~
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
missing_count +
growing_season +
country,  data = dataset)
summary(phcv_model_1)
phavg_model_1 <- lm(phavg ~
precip_anomaly +
lead_precip +
temp_anomaly +
lead_temp +
precip_anomaly * temp_anomaly +
log(capital_distance_km) +
log(avg_neighbor_distance_km) +
esa_ag_percent +
log_pop_growth +
log(pop_2015) +
missing_count +
growing_season +
country,  data = dataset)
summary(phavg_model_1)
ggplot(dataset, aes(x = phpc)) +
geom_histogram()
ggplot(dataset, aes(x = phpc)) +
geom_density()
ggplot(dataset, aes(x = phcv)) +
geom_density()
ggplot(dataset, aes(x = phavg)) +
geom_density()
# Maize Price Analysis
# Andrew Zimmer
# March 2022
rm(list=ls()) #clear and close everything open
#### Packages ####
library(tidyverse)
library(stargazer)
library(ggpubr)
library(scales)
library(spdep)
#### Read in Dataset ####
dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset.csv")
#dataset <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/cleaned_merged_dataset_method2.csv")
dataset <- dataset[,-1]
#make growing_season a factor
dataset$growing_season <- as.factor(dataset$growing_season)
mean(dataset$phpc)
mean(dataset$phavg)
ggplot(dataset, aes(x = phavg)) +
geom_density()
view <- dataset %>%
group_by(growing_season, country) %>%
summarise(mean = mean(phpc))
missing_count_data <- read.csv("/Users/azimmer/Documents/PhD Geography/Research/Zimmer - Maize Price/Missing Count Data/missing_count_data.csv")
ggplot(dataset, aes(x = phavg)) +
geom_histogram()
ggplot(dataset, aes(x = phavg)) +
geom_histogram() +
theme_bw()
ggplot(dataset, aes(x = phpc)) +
geom_histogram() +
theme_bw() +
labs(x = "Count", y = "PHPC")
ggplot(dataset, aes(x = phpc)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHPC")
p1 <- ggplot(dataset, aes(x = phpc)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHPC")
p2 <- ggplot(dataset, aes(x = phcv)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHCV")
p3 <- ggplot(dataset, aes(x = phavg)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHAVG")
ggarrange(p1, p2, p3, nrow = 1, ncol =3)
p1 <- ggplot(dataset, aes(x = phpc)) +
geom_histogram(fill = 'white') +
theme_bw() +
labs(y = "Count", x = "PHPC")
p2 <- ggplot(dataset, aes(x = phcv)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHCV")
p3 <- ggplot(dataset, aes(x = phavg)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHAVG")
ggarrange(p1, p2, p3, nrow = 1, ncol =3)
p1 <- ggplot(dataset, aes(x = phpc)) +
geom_histogram(fill = 'steelblue', color = 'grey') +
theme_bw() +
labs(y = "Count", x = "PHPC")
p2 <- ggplot(dataset, aes(x = phcv)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHCV")
p3 <- ggplot(dataset, aes(x = phavg)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHAVG")
ggarrange(p1, p2, p3, nrow = 1, ncol =3)
view <- dataset %>%
group_by(growing_season, country) %>%
summarise(mean = mean(phpc))
p1 <- ggplot(dataset, aes(x = phpc)) +
geom_histogram(fill = 'steelblue', color = 'white') +
theme_bw() +
labs(y = "Count", x = "PHPC")
p2 <- ggplot(dataset, aes(x = phcv)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHCV")
p3 <- ggplot(dataset, aes(x = phavg)) +
geom_histogram() +
theme_bw() +
labs(y = "Count", x = "PHAVG")
p1 <- ggplot(dataset, aes(x = phpc)) +
geom_histogram(fill = 'steelblue', color = 'white') +
theme_bw() +
labs(y = "Count", x = "PHPC")
p2 <- ggplot(dataset, aes(x = phcv)) +
geom_histogram(fill = 'steelblue', color = 'white') +
theme_bw() +
labs(y = "Count", x = "PHCV")
p3 <- ggplot(dataset, aes(x = phavg)) +
geom_histogram(fill = 'steelblue', color = 'white') +
theme_bw() +
labs(y = "Count", x = "PHAVG")
ggarrange(p1, p2, p3, nrow = 1, ncol =3)
